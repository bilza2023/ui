import { c as create_ssr_component, e as escape, v as validate_component, k as createEventDispatcher, d as each, f as add_attribute } from './ssr-CO7PFcwR.js';
import './ssr2-6RDSickK.js';
import './state.svelte-BCeRBbkS.js';

const css$3 = {
  code: ".sidebar.svelte-o4ku2f{height:100%;display:flex;flex-direction:column;gap:8px;background:#221605}.title.svelte-o4ku2f{padding:12px;color:#e6ccb0;font-weight:600;letter-spacing:0.3px;border-bottom:1px solid #3b2606}.list.svelte-o4ku2f{display:flex;flex-direction:column}.ch.svelte-o4ku2f{display:flex;gap:10px;align-items:center;text-align:left;padding:8px 12px;border:none;background:transparent;color:#d7c1a5;cursor:pointer;border-left:4px solid transparent}.ch.svelte-o4ku2f:hover{background:#2a1a06}.ch.active.svelte-o4ku2f{background:#2f1d07;color:#fff2e0;border-left-color:#eab308}.num.svelte-o4ku2f{min-width:28px;padding:2px 6px;border-radius:6px;background:#3b2606;color:#e6ccb0;font-size:12px}.name.svelte-o4ku2f{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}",
  map: `{"version":3,"file":"LeftChaptersBar.svelte","sources":["LeftChaptersBar.svelte"],"sourcesContent":["<script>\\n\\timport { createEventDispatcher } from 'svelte';\\n  \\n\\texport let chapters = [];      // [{ name, filename, number, order }]\\n\\texport let activeSlug = null;  // chapter filename\\n  \\n\\tconst dispatch = createEventDispatcher();\\n\\tfunction pick(slug) { dispatch('pick', { slug }); }\\n  <\/script>\\n  \\n  <div class=\\"sidebar\\">\\n\\t<div class=\\"title\\">Chapters</div>\\n\\t<div class=\\"list\\">\\n\\t  {#each chapters as ch}\\n\\t\\t<button\\n\\t\\t  class=\\"ch\\"\\n\\t\\t  class:active={activeSlug === ch.filename}\\n\\t\\t  on:click={() => pick(ch.filename)}\\n\\t\\t  title={ch.name}>\\n\\t\\t  <span class=\\"num\\">{ch.number.toString().padStart(2,'0')}</span>\\n\\t\\t  <span class=\\"name\\">{ch.name}</span>\\n\\t\\t</button>\\n\\t  {/each}\\n\\t</div>\\n  </div>\\n  \\n  <style>\\n\\t.sidebar{\\n\\t  height:100%; display:flex; flex-direction:column; gap:8px;\\n\\t  background:#221605;\\n\\t}\\n\\t.title{\\n\\t  padding:12px; color:#e6ccb0; font-weight:600; letter-spacing:0.3px; border-bottom:1px solid #3b2606;\\n\\t}\\n\\t.list{ display:flex; flex-direction:column; }\\n\\t.ch{\\n\\t  display:flex; gap:10px; align-items:center; text-align:left;\\n\\t  padding:8px 12px; border:none; background:transparent; color:#d7c1a5; cursor:pointer;\\n\\t  border-left:4px solid transparent;\\n\\t}\\n\\t.ch:hover{ background:#2a1a06; }\\n\\t.ch.active{ background:#2f1d07; color:#fff2e0; border-left-color:#eab308; }\\n\\t.num{\\n\\t  min-width:28px; padding:2px 6px; border-radius:6px; background:#3b2606; color:#e6ccb0; font-size:12px;\\n\\t}\\n\\t.name{ overflow:hidden; text-overflow:ellipsis; white-space:nowrap; }\\n  </style>\\n  "],"names":[],"mappings":"AA2BC,sBAAQ,CACN,OAAO,IAAI,CAAE,QAAQ,IAAI,CAAE,eAAe,MAAM,CAAE,IAAI,GAAG,CACzD,WAAW,OACb,CACA,oBAAM,CACJ,QAAQ,IAAI,CAAE,MAAM,OAAO,CAAE,YAAY,GAAG,CAAE,eAAe,KAAK,CAAE,cAAc,GAAG,CAAC,KAAK,CAAC,OAC9F,CACA,mBAAK,CAAE,QAAQ,IAAI,CAAE,eAAe,MAAQ,CAC5C,iBAAG,CACD,QAAQ,IAAI,CAAE,IAAI,IAAI,CAAE,YAAY,MAAM,CAAE,WAAW,IAAI,CAC3D,QAAQ,GAAG,CAAC,IAAI,CAAE,OAAO,IAAI,CAAE,WAAW,WAAW,CAAE,MAAM,OAAO,CAAE,OAAO,OAAO,CACpF,YAAY,GAAG,CAAC,KAAK,CAAC,WACxB,CACA,iBAAG,MAAM,CAAE,WAAW,OAAS,CAC/B,GAAG,qBAAO,CAAE,WAAW,OAAO,CAAE,MAAM,OAAO,CAAE,kBAAkB,OAAS,CAC1E,kBAAI,CACF,UAAU,IAAI,CAAE,QAAQ,GAAG,CAAC,GAAG,CAAE,cAAc,GAAG,CAAE,WAAW,OAAO,CAAE,MAAM,OAAO,CAAE,UAAU,IACnG,CACA,mBAAK,CAAE,SAAS,MAAM,CAAE,cAAc,QAAQ,CAAE,YAAY,MAAQ"}`
};
const LeftChaptersBar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { chapters = [] } = $$props;
  let { activeSlug = null } = $$props;
  createEventDispatcher();
  if ($$props.chapters === void 0 && $$bindings.chapters && chapters !== void 0) $$bindings.chapters(chapters);
  if ($$props.activeSlug === void 0 && $$bindings.activeSlug && activeSlug !== void 0) $$bindings.activeSlug(activeSlug);
  $$result.css.add(css$3);
  return `<div class="sidebar svelte-o4ku2f"><div class="title svelte-o4ku2f" data-svelte-h="svelte-1eoknb5">Chapters</div> <div class="list svelte-o4ku2f">${each(chapters, (ch) => {
    return `<button class="${["ch svelte-o4ku2f", activeSlug === ch.filename ? "active" : ""].join(" ").trim()}"${add_attribute("title", ch.name, 0)}><span class="num svelte-o4ku2f">${escape(ch.number.toString().padStart(2, "0"))}</span> <span class="name svelte-o4ku2f">${escape(ch.name)}</span> </button>`;
  })}</div> </div>`;
});
const css$2 = {
  code: ".exbar.svelte-11x684o{display:flex;gap:8px;flex-wrap:wrap}.ex.svelte-11x684o{display:flex;gap:8px;align-items:center;max-width:100%;padding:6px 10px;border:1px solid #6b4a12;background:#3b2606;color:#e6ccb0;border-radius:999px;cursor:pointer}.ex.active.svelte-11x684o{background:#78471a;border-color:#b07b2a;color:#fff2e0}.label.svelte-11x684o{max-width:42ch;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.badges.svelte-11x684o{display:flex;gap:6px}.b.svelte-11x684o{padding:2px 6px;border-radius:999px;font-size:12px;line-height:1;border:1px solid transparent;background:#241706;color:#d5bd9b}.b.total.svelte-11x684o{border-color:#5a3c0d}.b.decks.svelte-11x684o{background:#0c0535;color:#dcd6ff}.b.notes.svelte-11x684o{background:#6c430b;color:#ffe3c4}",
  map: `{"version":3,"file":"ExNavBar.svelte","sources":["ExNavBar.svelte"],"sourcesContent":["<script>\\n\\timport { createEventDispatcher } from 'svelte';\\n  \\n\\texport let exercises = [];          // [{ name, filename }]\\n\\texport let activeSlug = null;       // exercise filename\\n\\texport let counts = {};             // { [slug]: { total, deck, note, latestEditedAt } }\\n  \\n\\tconst dispatch = createEventDispatcher();\\n\\tfunction pick(slug) { dispatch('pick', { slug }); }\\n  <\/script>\\n  \\n  <div class=\\"exbar\\">\\n\\t{#each exercises as ex}\\n\\t  {#key ex.filename}\\n\\t\\t<button\\n\\t\\t  class=\\"ex\\"\\n\\t\\t  class:active={activeSlug === ex.filename}\\n\\t\\t  on:click={() => pick(ex.filename)}\\n\\t\\t  title={ex.name}>\\n\\t\\t  <span class=\\"label\\">{ex.name}</span>\\n\\t\\t  {#if counts && counts[ex.filename]}\\n\\t\\t\\t<span class=\\"badges\\">\\n\\t\\t\\t  <span class=\\"b total\\" title=\\"Total\\">{counts[ex.filename].total}</span>\\n\\t\\t\\t  <span class=\\"b decks\\" title=\\"Decks\\">{counts[ex.filename].deck}</span>\\n\\t\\t\\t  <span class=\\"b notes\\" title=\\"Notes\\">{counts[ex.filename].note}</span>\\n\\t\\t\\t</span>\\n\\t\\t  {/if}\\n\\t\\t</button>\\n\\t  {/key}\\n\\t{/each}\\n  </div>\\n  \\n  <style>\\n\\t.exbar{ display:flex; gap:8px; flex-wrap:wrap; }\\n\\t.ex{\\n\\t  display:flex; gap:8px; align-items:center; max-width:100%;\\n\\t  padding:6px 10px; border:1px solid #6b4a12; background:#3b2606; color:#e6ccb0; border-radius:999px; cursor:pointer;\\n\\t}\\n\\t.ex.active{ background:#78471a; border-color:#b07b2a; color:#fff2e0; }\\n\\t.label{ max-width:42ch; overflow:hidden; text-overflow:ellipsis; white-space:nowrap; }\\n\\t.badges{ display:flex; gap:6px; }\\n\\t.b{\\n\\t  padding:2px 6px; border-radius:999px; font-size:12px; line-height:1; border:1px solid transparent;\\n\\t  background:#241706; color:#d5bd9b;\\n\\t}\\n\\t.b.total{ border-color:#5a3c0d; }\\n\\t.b.decks{ background:#0c0535; color:#dcd6ff; }\\n\\t.b.notes{ background:#6c430b; color:#ffe3c4; }\\n  </style>\\n  "],"names":[],"mappings":"AAiCC,qBAAM,CAAE,QAAQ,IAAI,CAAE,IAAI,GAAG,CAAE,UAAU,IAAM,CAC/C,kBAAG,CACD,QAAQ,IAAI,CAAE,IAAI,GAAG,CAAE,YAAY,MAAM,CAAE,UAAU,IAAI,CACzD,QAAQ,GAAG,CAAC,IAAI,CAAE,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,WAAW,OAAO,CAAE,MAAM,OAAO,CAAE,cAAc,KAAK,CAAE,OAAO,OAC7G,CACA,GAAG,sBAAO,CAAE,WAAW,OAAO,CAAE,aAAa,OAAO,CAAE,MAAM,OAAS,CACrE,qBAAM,CAAE,UAAU,IAAI,CAAE,SAAS,MAAM,CAAE,cAAc,QAAQ,CAAE,YAAY,MAAQ,CACrF,sBAAO,CAAE,QAAQ,IAAI,CAAE,IAAI,GAAK,CAChC,iBAAE,CACA,QAAQ,GAAG,CAAC,GAAG,CAAE,cAAc,KAAK,CAAE,UAAU,IAAI,CAAE,YAAY,CAAC,CAAE,OAAO,GAAG,CAAC,KAAK,CAAC,WAAW,CACjG,WAAW,OAAO,CAAE,MAAM,OAC5B,CACA,EAAE,qBAAM,CAAE,aAAa,OAAS,CAChC,EAAE,qBAAM,CAAE,WAAW,OAAO,CAAE,MAAM,OAAS,CAC7C,EAAE,qBAAM,CAAE,WAAW,OAAO,CAAE,MAAM,OAAS"}`
};
const ExNavBar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { exercises = [] } = $$props;
  let { activeSlug = null } = $$props;
  let { counts = {} } = $$props;
  createEventDispatcher();
  if ($$props.exercises === void 0 && $$bindings.exercises && exercises !== void 0) $$bindings.exercises(exercises);
  if ($$props.activeSlug === void 0 && $$bindings.activeSlug && activeSlug !== void 0) $$bindings.activeSlug(activeSlug);
  if ($$props.counts === void 0 && $$bindings.counts && counts !== void 0) $$bindings.counts(counts);
  $$result.css.add(css$2);
  return `<div class="exbar svelte-11x684o">${each(exercises, (ex) => {
    return `<button class="${["ex svelte-11x684o", activeSlug === ex.filename ? "active" : ""].join(" ").trim()}"${add_attribute("title", ex.name, 0)}><span class="label svelte-11x684o">${escape(ex.name)}</span> ${counts && counts[ex.filename] ? `<span class="badges svelte-11x684o"><span class="b total svelte-11x684o" title="Total">${escape(counts[ex.filename].total)}</span> <span class="b decks svelte-11x684o" title="Decks">${escape(counts[ex.filename].deck)}</span> <span class="b notes svelte-11x684o" title="Notes">${escape(counts[ex.filename].note)}</span> </span>` : ``} </button>`;
  })} </div>`;
});
const css$1 = {
  code: ".empty.svelte-79tqom{width:100%;text-align:center;color:#3b2606;padding:40px 12px}.grid.svelte-79tqom{display:grid;grid-template-columns:repeat(auto-fill, minmax(280px, 1fr));gap:12px;width:100%}.card.svelte-79tqom{display:flex;flex-direction:column;gap:8px;background:#f3e5c6;color:#1b1205;border-radius:16px;padding:12px;text-decoration:none;border:1px solid #e2d4b5;box-shadow:0 1px 0 rgba(0,0,0,0.04)}.card.svelte-79tqom:hover{transform:translateY(-1px);transition:transform .12s ease}.type.svelte-79tqom{align-self:flex-start;padding:2px 8px;border-radius:999px;font-size:12px;background:var(--bg);color:var(--fg);border:1px solid rgba(255,255,255,0.12)}.title.svelte-79tqom{font-weight:700;color:#2b1b05}.desc.svelte-79tqom{color:#4a3111;font-size:0.95rem}.meta.svelte-79tqom{display:flex;flex-wrap:wrap;gap:6px}.pill.svelte-79tqom{background:#2E1C02;color:#e6ccb0;border-radius:999px;font-size:12px;padding:2px 8px}.tag.svelte-79tqom{background:#ead6b5;color:#4a3111;border-radius:999px;font-size:12px;padding:2px 8px}.footer.svelte-79tqom{display:flex;justify-content:space-between;align-items:center;color:#6b4a12;font-size:12px}.fn.svelte-79tqom{max-width:60%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.date.svelte-79tqom{opacity:0.8}",
  map: `{"version":3,"file":"QuestionCard.svelte","sources":["QuestionCard.svelte"],"sourcesContent":["<script>\\n  export let items = []; // rows from getExerciseContent(): { filename, type, name, description, status, tags, timed, editedAt }\\n\\n  function hrefFor(q) {\\n    if (q.type === 'deck') return \`/player?filename=\${encodeURIComponent(q.filename)}\`;\\n    if (q.type === 'note') return \`/notes?filename=\${encodeURIComponent(q.filename)}\`;\\n    return '#';\\n  }\\n\\n  function metaFor(q) {\\n    switch (q.type) {\\n      case 'deck': return { bg: '#0c0535', fg: '#dcd6ff', label: 'Deck' };\\n      case 'note': return { bg: '#6c430b', fg: '#ffe3c4', label: 'Note' };\\n      default:     return { bg: '#2E1C02', fg: '#e6ccb0', label: (q.type ?? 'Item') };\\n    }\\n  }\\n<\/script>\\n\\n{#if !items || items.length === 0}\\n  <div class=\\"empty\\">No items yet for this exercise.</div>\\n{:else}\\n  <div class=\\"grid\\">\\n    {#each items as q}\\n      {@const m = metaFor(q)}\\n      <a class=\\"card\\" href={hrefFor(q)}>\\n        <div class=\\"type\\" style={\`--bg:\${m.bg}; --fg:\${m.fg}\`}>{m.label}</div>\\n        <div class=\\"title\\">{q.name ?? q.filename}</div>\\n        {#if q.description}\\n          <div class=\\"desc\\">{q.description}</div>\\n        {/if}\\n        <div class=\\"meta\\">\\n          {#if q.timed}<span class=\\"pill\\">timed</span>{/if}\\n          {#if q.status}<span class=\\"pill\\">{q.status}</span>{/if}\\n          {#if Array.isArray(q.tags)}\\n            {#each q.tags.slice(0,5) as t}\\n              <span class=\\"tag\\">#{t}</span>\\n            {/each}\\n          {/if}\\n        </div>\\n        <div class=\\"footer\\">\\n          <span class=\\"fn\\">{q.filename}</span>\\n          {#if q.editedAt}<span class=\\"date\\" title=\\"Last edited\\">{new Date(q.editedAt).toLocaleDateString()}</span>{/if}\\n        </div>\\n      </a>\\n    {/each}\\n  </div>\\n{/if}\\n\\n<style>\\n  .empty{\\n    width:100%; text-align:center; color:#3b2606; padding:40px 12px;\\n  }\\n  .grid{\\n    display:grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\\n    gap:12px; width:100%;\\n  }\\n  .card{\\n    display:flex; flex-direction:column; gap:8px;\\n    background:#f3e5c6; color:#1b1205; border-radius:16px; padding:12px; text-decoration:none;\\n    border:1px solid #e2d4b5; box-shadow: 0 1px 0 rgba(0,0,0,0.04);\\n  }\\n  .card:hover{ transform: translateY(-1px); transition: transform .12s ease; }\\n  .type{\\n    align-self:flex-start; padding:2px 8px; border-radius:999px; font-size:12px;\\n    background: var(--bg); color: var(--fg); border:1px solid rgba(255,255,255,0.12);\\n  }\\n  .title{ font-weight:700; color:#2b1b05; }\\n  .desc{ color:#4a3111; font-size: 0.95rem; }\\n  .meta{ display:flex; flex-wrap:wrap; gap:6px; }\\n  .pill{ background:#2E1C02; color:#e6ccb0; border-radius:999px; font-size:12px; padding:2px 8px; }\\n  .tag{ background:#ead6b5; color:#4a3111; border-radius:999px; font-size:12px; padding:2px 8px; }\\n  .footer{ display:flex; justify-content:space-between; align-items:center; color:#6b4a12; font-size:12px; }\\n  .fn{ max-width:60%; overflow:hidden; text-overflow:ellipsis; white-space:nowrap; }\\n  .date{ opacity:0.8; }\\n</style>\\n"],"names":[],"mappings":"AAiDE,oBAAM,CACJ,MAAM,IAAI,CAAE,WAAW,MAAM,CAAE,MAAM,OAAO,CAAE,QAAQ,IAAI,CAAC,IAC7D,CACA,mBAAK,CACH,QAAQ,IAAI,CAAE,qBAAqB,CAAE,OAAO,SAAS,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAC1E,IAAI,IAAI,CAAE,MAAM,IAClB,CACA,mBAAK,CACH,QAAQ,IAAI,CAAE,eAAe,MAAM,CAAE,IAAI,GAAG,CAC5C,WAAW,OAAO,CAAE,MAAM,OAAO,CAAE,cAAc,IAAI,CAAE,QAAQ,IAAI,CAAE,gBAAgB,IAAI,CACzF,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAC/D,CACA,mBAAK,MAAM,CAAE,SAAS,CAAE,WAAW,IAAI,CAAC,CAAE,UAAU,CAAE,SAAS,CAAC,IAAI,CAAC,IAAM,CAC3E,mBAAK,CACH,WAAW,UAAU,CAAE,QAAQ,GAAG,CAAC,GAAG,CAAE,cAAc,KAAK,CAAE,UAAU,IAAI,CAC3E,UAAU,CAAE,IAAI,IAAI,CAAC,CAAE,KAAK,CAAE,IAAI,IAAI,CAAC,CAAE,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACjF,CACA,oBAAM,CAAE,YAAY,GAAG,CAAE,MAAM,OAAS,CACxC,mBAAK,CAAE,MAAM,OAAO,CAAE,SAAS,CAAE,OAAS,CAC1C,mBAAK,CAAE,QAAQ,IAAI,CAAE,UAAU,IAAI,CAAE,IAAI,GAAK,CAC9C,mBAAK,CAAE,WAAW,OAAO,CAAE,MAAM,OAAO,CAAE,cAAc,KAAK,CAAE,UAAU,IAAI,CAAE,QAAQ,GAAG,CAAC,GAAK,CAChG,kBAAI,CAAE,WAAW,OAAO,CAAE,MAAM,OAAO,CAAE,cAAc,KAAK,CAAE,UAAU,IAAI,CAAE,QAAQ,GAAG,CAAC,GAAK,CAC/F,qBAAO,CAAE,QAAQ,IAAI,CAAE,gBAAgB,aAAa,CAAE,YAAY,MAAM,CAAE,MAAM,OAAO,CAAE,UAAU,IAAM,CACzG,iBAAG,CAAE,UAAU,GAAG,CAAE,SAAS,MAAM,CAAE,cAAc,QAAQ,CAAE,YAAY,MAAQ,CACjF,mBAAK,CAAE,QAAQ,GAAK"}`
};
function hrefFor(q) {
  if (q.type === "deck") return `/player?filename=${encodeURIComponent(q.filename)}`;
  if (q.type === "note") return `/notes?filename=${encodeURIComponent(q.filename)}`;
  return "#";
}
function metaFor(q) {
  switch (q.type) {
    case "deck":
      return {
        bg: "#0c0535",
        fg: "#dcd6ff",
        label: "Deck"
      };
    case "note":
      return {
        bg: "#6c430b",
        fg: "#ffe3c4",
        label: "Note"
      };
    default:
      return {
        bg: "#2E1C02",
        fg: "#e6ccb0",
        label: q.type ?? "Item"
      };
  }
}
const QuestionCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { items = [] } = $$props;
  if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
  $$result.css.add(css$1);
  return `${!items || items.length === 0 ? `<div class="empty svelte-79tqom" data-svelte-h="svelte-1qxu5oa">No items yet for this exercise.</div>` : `<div class="grid svelte-79tqom">${each(items, (q) => {
    let m = metaFor(q);
    return ` <a class="card svelte-79tqom"${add_attribute("href", hrefFor(q), 0)}><div class="type svelte-79tqom"${add_attribute("style", `--bg:${m.bg}; --fg:${m.fg}`, 0)}>${escape(m.label)}</div> <div class="title svelte-79tqom">${escape(q.name ?? q.filename)}</div> ${q.description ? `<div class="desc svelte-79tqom">${escape(q.description)}</div>` : ``} <div class="meta svelte-79tqom">${q.timed ? `<span class="pill svelte-79tqom" data-svelte-h="svelte-6jnlqr">timed</span>` : ``} ${q.status ? `<span class="pill svelte-79tqom">${escape(q.status)}</span>` : ``} ${Array.isArray(q.tags) ? `${each(q.tags.slice(0, 5), (t) => {
      return `<span class="tag svelte-79tqom">#${escape(t)}</span>`;
    })}` : ``}</div> <div class="footer svelte-79tqom"><span class="fn svelte-79tqom">${escape(q.filename)}</span> ${q.editedAt ? `<span class="date svelte-79tqom" title="Last edited">${escape(new Date(q.editedAt).toLocaleDateString())}</span>` : ``}</div> </a>`;
  })}</div>`}`;
});
const css = {
  code: "body{background:#1b1205}.empty.svelte-1qebzbq.svelte-1qebzbq{padding:40px 12px;text-align:center;color:#d5bd9b}.topbar.svelte-1qebzbq.svelte-1qebzbq{display:flex;align-items:center;justify-content:space-between;padding:10px 12px;background:#2E1C02;border-bottom:1px solid #3b2606;position:sticky;top:0;z-index:10}.title.svelte-1qebzbq.svelte-1qebzbq{display:flex;flex-direction:column;gap:2px}.tcode.svelte-1qebzbq.svelte-1qebzbq{font-weight:700;color:#f4e2c7;letter-spacing:0.3px}.desc.svelte-1qebzbq.svelte-1qebzbq{color:#d5bd9b;font-size:0.95rem;max-width:60ch;opacity:0.9}.filters.svelte-1qebzbq.svelte-1qebzbq{display:flex;align-items:center;gap:8px;color:#d5bd9b}.filters.svelte-1qebzbq button.svelte-1qebzbq{padding:4px 10px;border:1px solid #6b4a12;background:#3b2606;color:#e6ccb0;border-radius:8px;cursor:pointer}.filters.svelte-1qebzbq button.active.svelte-1qebzbq{background:#78471a;border-color:#b07b2a}.page.svelte-1qebzbq.svelte-1qebzbq{display:flex;min-height:calc(100vh - 54px)}.left.svelte-1qebzbq.svelte-1qebzbq{width:260px;border-right:1px solid #3b2606;background:#221605}.main.svelte-1qebzbq.svelte-1qebzbq{flex:1;display:flex;flex-direction:column;gap:12px}.exbar-wrap.svelte-1qebzbq.svelte-1qebzbq{position:sticky;top:54px;background:#241706;padding:10px 12px;border-bottom:1px solid #3b2606;z-index:5}.cards.svelte-1qebzbq.svelte-1qebzbq{padding:16px;background:#C1B294;min-height:60vh;display:flex;justify-content:center;align-items:flex-start}@media(max-width: 900px){.left.svelte-1qebzbq.svelte-1qebzbq{width:200px}}@media(max-width: 700px){.page.svelte-1qebzbq.svelte-1qebzbq{flex-direction:column}.left.svelte-1qebzbq.svelte-1qebzbq{width:100%}.exbar-wrap.svelte-1qebzbq.svelte-1qebzbq{top:98px}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n\\timport { goto } from '$app/navigation';\\n\\timport LeftChaptersBar from './LeftChaptersBar.svelte';\\n\\timport ExNavBar from './ExNavBar.svelte';\\n\\timport QuestionCard from './QuestionCard.svelte';\\n\\t// Provided by +page.server.js\\n\\texport let data;\\n  \\n\\t// Local state\\n\\tlet tcode = null;\\n\\tlet chapters = [];\\n\\tlet chapter = null;\\n\\tlet exercises = [];\\n\\tlet exercise = null;\\n\\tlet counts = {};\\n\\tlet items = [];\\n\\tlet typeFilter = null; // 'deck' | 'note' | null\\n\\tlet tcodeDesc = '';\\n  \\n\\t// Sync from server data\\n\\t$: if (data) {\\n\\t  ({ tcode, chapters, chapter, exercises, exercise, counts, items, typeFilter } = data);\\n\\t  // Optional: pull description from the registry payload if present\\n\\t  tcodeDesc = (data.tcodeList ?? []).find(t => t.tcodeName === tcode)?.description ?? '';\\n\\t}\\n  \\n\\t// URL is the state (tcode is fixed; we only change chapter/exercise/type)\\n\\tfunction go(params) {\\n\\t  const p = new URLSearchParams({\\n\\t\\ttcode,\\n\\t\\tchapter:  params.chapter  ?? chapter,\\n\\t\\texercise: params.exercise ?? exercise,\\n\\t\\t...(params.type ? { type: params.type } : {})\\n\\t  });\\n\\t  goto(\`/syllabus?\${p.toString()}\`, { replaceState: true, keepfocus: true, noScroll: false });\\n\\t}\\n  \\n\\tfunction onPickChapter(e) {\\n\\t  const slug = e.detail?.slug;\\n\\t  if (!slug || slug === chapter) return;\\n\\t  // when chapter changes, reset exercise to the first of that chapter\\n\\t  go({ chapter: slug, exercise: undefined });\\n\\t}\\n  \\n\\tfunction onPickExercise(e) {\\n\\t  const slug = e.detail?.slug;\\n\\t  if (!slug || slug === exercise) return;\\n\\t  go({ exercise: slug });\\n\\t}\\n  \\n\\tfunction setTypeFilter(next) {\\n\\t  go({ type: next ?? undefined });\\n\\t}\\n  <\/script>\\n  \\n  {#if !tcode}\\n\\t<div class=\\"empty\\">No syllabus registered.</div>\\n  {:else}\\n\\t<!-- Top strip: fixed single-tcode header + filters -->\\n\\t<div class=\\"topbar one\\">\\n\\t  <div class=\\"title\\">\\n\\t\\t<div class=\\"tcode\\">{tcode}</div>\\n\\t\\t{#if tcodeDesc}<div class=\\"desc\\">{tcodeDesc}</div>{/if}\\n\\t  </div>\\n  \\n\\t  <div class=\\"filters\\">\\n\\t\\t<span>Filter:</span>\\n\\t\\t<button class:active={!typeFilter} on:click={() => setTypeFilter(null)}>All</button>\\n\\t\\t<button class:active={typeFilter==='deck'} on:click={() => setTypeFilter('deck')}>Decks</button>\\n\\t\\t<button class:active={typeFilter==='note'} on:click={() => setTypeFilter('note')}>Notes</button>\\n\\t  </div>\\n\\t</div>\\n  \\n\\t<div class=\\"page\\">\\n\\t  <aside class=\\"left\\">\\n\\t\\t<LeftChaptersBar\\n\\t\\t  {chapters}\\n\\t\\t  activeSlug={chapter}\\n\\t\\t  on:pick={onPickChapter} />\\n\\t  </aside>\\n  \\n\\t  <main class=\\"main\\">\\n\\t\\t<div class=\\"exbar-wrap\\">\\n\\t\\t  <ExNavBar\\n\\t\\t\\t{exercises}\\n\\t\\t\\tactiveSlug={exercise}\\n\\t\\t\\t{counts}\\n\\t\\t\\ton:pick={onPickExercise} />\\n\\t\\t</div>\\n  \\n\\t\\t<section class=\\"cards\\">\\n\\t\\t  <QuestionCard {items} />\\n\\t\\t</section>\\n\\t  </main>\\n\\t</div>\\n  {/if}\\n  \\n  <style>\\n\\t:global(body){ background:#1b1205; }\\n  \\n\\t.empty{\\n\\t  padding:40px 12px; text-align:center; color:#d5bd9b;\\n\\t}\\n  \\n\\t.topbar{\\n\\t  display:flex; align-items:center; justify-content:space-between;\\n\\t  padding:10px 12px; background:#2E1C02; border-bottom:1px solid #3b2606;\\n\\t  position:sticky; top:0; z-index:10;\\n\\t}\\n\\t.title{ display:flex; flex-direction:column; gap:2px; }\\n\\t.tcode{\\n\\t  font-weight:700; color:#f4e2c7; letter-spacing:0.3px;\\n\\t}\\n\\t.desc{\\n\\t  color:#d5bd9b; font-size:0.95rem; max-width:60ch; opacity:0.9;\\n\\t}\\n  \\n\\t.filters{ display:flex; align-items:center; gap:8px; color:#d5bd9b; }\\n\\t.filters button{\\n\\t  padding:4px 10px; border:1px solid #6b4a12; background:#3b2606; color:#e6ccb0; border-radius:8px; cursor:pointer;\\n\\t}\\n\\t.filters button.active{ background:#78471a; border-color:#b07b2a; }\\n  \\n\\t.page{ display:flex; min-height:calc(100vh - 54px); }\\n\\t.left{ width:260px; border-right:1px solid #3b2606; background:#221605; }\\n\\t.main{ flex:1; display:flex; flex-direction:column; gap:12px; }\\n  \\n\\t.exbar-wrap{\\n\\t  position:sticky; top:54px; background:#241706; padding:10px 12px; border-bottom:1px solid #3b2606; z-index:5;\\n\\t}\\n  \\n\\t.cards{\\n\\t  padding:16px; background:#C1B294; min-height:60vh; display:flex; justify-content:center; align-items:flex-start;\\n\\t}\\n  \\n\\t@media (max-width: 900px){\\n\\t  .left{ width:200px; }\\n\\t}\\n\\t@media (max-width: 700px){\\n\\t  .page{ flex-direction:column; }\\n\\t  .left{ width:100%; }\\n\\t  .exbar-wrap{ top:98px; } /* little cushion if header wraps on mobile */\\n\\t}\\n  </style>\\n  "],"names":[],"mappings":"AAkGS,IAAK,CAAE,WAAW,OAAS,CAEnC,oCAAM,CACJ,QAAQ,IAAI,CAAC,IAAI,CAAE,WAAW,MAAM,CAAE,MAAM,OAC9C,CAEA,qCAAO,CACL,QAAQ,IAAI,CAAE,YAAY,MAAM,CAAE,gBAAgB,aAAa,CAC/D,QAAQ,IAAI,CAAC,IAAI,CAAE,WAAW,OAAO,CAAE,cAAc,GAAG,CAAC,KAAK,CAAC,OAAO,CACtE,SAAS,MAAM,CAAE,IAAI,CAAC,CAAE,QAAQ,EAClC,CACA,oCAAM,CAAE,QAAQ,IAAI,CAAE,eAAe,MAAM,CAAE,IAAI,GAAK,CACtD,oCAAM,CACJ,YAAY,GAAG,CAAE,MAAM,OAAO,CAAE,eAAe,KACjD,CACA,mCAAK,CACH,MAAM,OAAO,CAAE,UAAU,OAAO,CAAE,UAAU,IAAI,CAAE,QAAQ,GAC5D,CAEA,sCAAQ,CAAE,QAAQ,IAAI,CAAE,YAAY,MAAM,CAAE,IAAI,GAAG,CAAE,MAAM,OAAS,CACpE,uBAAQ,CAAC,qBAAM,CACb,QAAQ,GAAG,CAAC,IAAI,CAAE,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,WAAW,OAAO,CAAE,MAAM,OAAO,CAAE,cAAc,GAAG,CAAE,OAAO,OAC3G,CACA,uBAAQ,CAAC,MAAM,sBAAO,CAAE,WAAW,OAAO,CAAE,aAAa,OAAS,CAElE,mCAAK,CAAE,QAAQ,IAAI,CAAE,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAG,CACpD,mCAAK,CAAE,MAAM,KAAK,CAAE,aAAa,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,WAAW,OAAS,CACxE,mCAAK,CAAE,KAAK,CAAC,CAAE,QAAQ,IAAI,CAAE,eAAe,MAAM,CAAE,IAAI,IAAM,CAE9D,yCAAW,CACT,SAAS,MAAM,CAAE,IAAI,IAAI,CAAE,WAAW,OAAO,CAAE,QAAQ,IAAI,CAAC,IAAI,CAAE,cAAc,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,QAAQ,CAC7G,CAEA,oCAAM,CACJ,QAAQ,IAAI,CAAE,WAAW,OAAO,CAAE,WAAW,IAAI,CAAE,QAAQ,IAAI,CAAE,gBAAgB,MAAM,CAAE,YAAY,UACvG,CAEA,MAAO,YAAY,KAAK,CAAC,CACvB,mCAAK,CAAE,MAAM,KAAO,CACtB,CACA,MAAO,YAAY,KAAK,CAAC,CACvB,mCAAK,CAAE,eAAe,MAAQ,CAC9B,mCAAK,CAAE,MAAM,IAAM,CACnB,yCAAW,CAAE,IAAI,IAAM,CACzB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  let tcode = null;
  let chapters = [];
  let chapter = null;
  let exercises = [];
  let exercise = null;
  let counts = {};
  let items = [];
  let typeFilter = null;
  let tcodeDesc = "";
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  $$result.css.add(css);
  {
    if (data) {
      ({ tcode, chapters, chapter, exercises, exercise, counts, items, typeFilter } = data);
      tcodeDesc = (data.tcodeList ?? []).find((t) => t.tcodeName === tcode)?.description ?? "";
    }
  }
  return `${!tcode ? `<div class="empty svelte-1qebzbq" data-svelte-h="svelte-1vpyuio">No syllabus registered.</div>` : ` <div class="topbar one svelte-1qebzbq"><div class="title svelte-1qebzbq"><div class="tcode svelte-1qebzbq">${escape(tcode)}</div> ${tcodeDesc ? `<div class="desc svelte-1qebzbq">${escape(tcodeDesc)}</div>` : ``}</div> <div class="filters svelte-1qebzbq"><span data-svelte-h="svelte-1bk774u">Filter:</span> <button class="${["svelte-1qebzbq", !typeFilter ? "active" : ""].join(" ").trim()}" data-svelte-h="svelte-wv31sz">All</button> <button class="${["svelte-1qebzbq", typeFilter === "deck" ? "active" : ""].join(" ").trim()}" data-svelte-h="svelte-x0blex">Decks</button> <button class="${["svelte-1qebzbq", typeFilter === "note" ? "active" : ""].join(" ").trim()}" data-svelte-h="svelte-2qbkp4">Notes</button></div></div> <div class="page svelte-1qebzbq"><aside class="left svelte-1qebzbq">${validate_component(LeftChaptersBar, "LeftChaptersBar").$$render($$result, { chapters, activeSlug: chapter }, {}, {})}</aside> <main class="main svelte-1qebzbq"><div class="exbar-wrap svelte-1qebzbq">${validate_component(ExNavBar, "ExNavBar").$$render($$result, { exercises, activeSlug: exercise, counts }, {}, {})}</div> <section class="cards svelte-1qebzbq">${validate_component(QuestionCard, "QuestionCard").$$render($$result, { items }, {}, {})}</section></main></div>`}`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-BtKi-PqA.js.map
