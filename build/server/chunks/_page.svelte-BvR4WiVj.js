import { c as create_ssr_component, f as add_attribute, d as each, e as escape } from './ssr-CO7PFcwR.js';

const css = {
  code: "label.svelte-7lwlo8.svelte-7lwlo8.svelte-7lwlo8{display:block;margin-bottom:0.25rem;opacity:.8 }input.svelte-7lwlo8.svelte-7lwlo8.svelte-7lwlo8,select.svelte-7lwlo8.svelte-7lwlo8.svelte-7lwlo8{width:100%;padding:.5rem .6rem;border:1px solid #333;border-radius:.5rem;background:transparent }button.svelte-7lwlo8.svelte-7lwlo8.svelte-7lwlo8{padding:.55rem .9rem;border:1px solid #444;border-radius:.6rem}.space-y-4.svelte-7lwlo8>.svelte-7lwlo8+.svelte-7lwlo8{margin-top:1rem }.grid.svelte-7lwlo8.svelte-7lwlo8.svelte-7lwlo8{display:grid }",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  let tcode = '';\\n  let chapter = '';\\n  let exercise = '';\\n\\n  let file = null;\\n  let filename = '';\\n  let description = '';\\n  let tagsCsv = '';\\n  let status = '';\\n\\n  let loading = false;\\n  let msg = '';\\n  let err = '';\\n\\n  const STATUS = ['draft', 'ready', 'published', 'archived'];\\n\\n  function toSafeName(name) {\\n    return (name || '')\\n      .replace(/\\\\.json$/i, '')\\n      .trim()\\n      .toLowerCase()\\n      .replace(/[^a-z0-9_-]+/g, '-')\\n      .replace(/-+/g, '-')\\n      .replace(/^-|-$/g, '');\\n  }\\n\\n  function pickFile(e) {\\n    const f = e.target?.files?.[0] ?? null;\\n    file = f;\\n    filename = f ? toSafeName(f.name) : '';\\n  }\\n\\n  function onDrop(e) {\\n    e.preventDefault();\\n    const f = e.dataTransfer?.files?.[0] ?? null;\\n    file = f;\\n    filename = f ? toSafeName(f.name) : '';\\n  }\\n\\n  function onDragOver(e) {\\n    e.preventDefault();\\n  }\\n\\n  async function upload() {\\n    err = '';\\n    msg = '';\\n\\n    if (!file) { err = 'Pick a .json file.'; return; }\\n    if (!/\\\\.json$/i.test(file.name)) { err = 'Only .json files allowed.'; return; }\\n    if (!tcode || !chapter || !exercise) { err = 'tcode, chapter, exercise are required.'; return; }\\n\\n    loading = true;\\n    try {\\n      const fd = new FormData();\\n      fd.append('tcode', tcode.trim());\\n      fd.append('chapter', String(parseInt(chapter, 10)));\\n      fd.append('exercise', exercise.trim());\\n      fd.append('file', file);\\n      fd.append('filename', toSafeName(filename || file.name));\\n      if (description) fd.append('description', description);\\n      if (tagsCsv) fd.append('tags', tagsCsv);\\n      if (status) fd.append('status', status);\\n\\n      const res = await fetch('/admin/upload_json', { method: 'POST', body: fd });\\n      const data = await res.json();\\n\\n      if (!res.ok) throw new Error(data?.error || 'Upload failed');\\n      msg = \`Uploaded ✓ (\${data.filename})\`;\\n      // reset only file fields; keep path fields\\n      file = null;\\n      filename = '';\\n      (document.getElementById('file') || {}).value = '';\\n    } catch (e) {\\n      err = e.message || 'Error';\\n    } finally {\\n      loading = false;\\n    }\\n  }\\n<\/script>\\n\\n<h1 class=\\"text-xl mb-4\\">Upload JSON (lean)</h1>\\n\\n<!-- svelte-ignore a11y-no-static-element-interactions -->\\n<div class=\\"space-y-4\\" on:drop={onDrop} on:dragover={onDragOver}>\\n  <div class=\\"grid gap-3 md:grid-cols-3\\">\\n    <div>\\n      <label for=\\"tcode\\">tcode</label>\\n      <input id=\\"tcode\\" bind:value={tcode} placeholder=\\"e.g. fbise9math\\" />\\n    </div>\\n    <div>\\n      <label for=\\"chapter\\">chapter</label>\\n      <input id=\\"chapter\\" bind:value={chapter} inputmode=\\"numeric\\" placeholder=\\"e.g. 11\\" />\\n    </div>\\n    <div>\\n      <label for=\\"exercise\\">exercise</label>\\n      <input id=\\"exercise\\" bind:value={exercise} placeholder=\\"e.g. 1.1\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\"grid gap-3 md:grid-cols-3\\">\\n    <div>\\n      <label for=\\"file\\">.json file</label>\\n      <input id=\\"file\\" type=\\"file\\" accept=\\"application/json,.json\\" on:change={pickFile} />\\n    </div>\\n    <div>\\n      <label for=\\"filename\\">filename (auto)</label>\\n      <input id=\\"filename\\" bind:value={filename} placeholder=\\"auto from file\\" />\\n    </div>\\n    <div>\\n      <label for=\\"status\\">status</label>\\n      <select id=\\"status\\" bind:value={status}>\\n        <option value=\\"\\">(auto)</option>\\n        {#each STATUS as s}<option value={s}>{s}</option>{/each}\\n      </select>\\n    </div>\\n  </div>\\n\\n  <div class=\\"grid gap-3 md:grid-cols-2\\">\\n    <div>\\n      <label for=\\"description\\">description</label>\\n      <input id=\\"description\\" bind:value={description} placeholder=\\"optional\\" />\\n    </div>\\n    <div>\\n      <label for=\\"tags\\">tags (csv)</label>\\n      <input id=\\"tags\\" bind:value={tagsCsv} placeholder=\\"algebra, basics\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\"flex items-center gap-3\\">\\n    <button on:click|preventDefault={upload} disabled={loading}>\\n      {loading ? 'Uploading…' : 'Upload JSON'}\\n    </button>\\n    {#if msg}<span class=\\"text-green-400\\">{msg}</span>{/if}\\n    {#if err}<span class=\\"text-red-400\\">{err}</span>{/if}\\n  </div>\\n\\n  <p class=\\"text-xs opacity-70\\">Tip: You can also drag & drop a .json file anywhere on this form.</p>\\n</div>\\n\\n<style>\\n  label { display:block; margin-bottom: 0.25rem; opacity:.8 }\\n  input, select { width:100%; padding:.5rem .6rem; border:1px solid #333; border-radius:.5rem; background:transparent }\\n  button { padding:.55rem .9rem; border:1px solid #444; border-radius:.6rem; }\\n  .space-y-4 > * + * { margin-top:1rem }\\n  .grid { display:grid }\\n</style>\\n"],"names":[],"mappings":"AA6IE,+CAAM,CAAE,QAAQ,KAAK,CAAE,aAAa,CAAE,OAAO,CAAE,QAAQ,EAAE,CAAC,CAC1D,+CAAK,CAAE,gDAAO,CAAE,MAAM,IAAI,CAAE,QAAQ,KAAK,CAAC,KAAK,CAAE,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAE,cAAc,KAAK,CAAE,WAAW,WAAW,CAAC,CACpH,gDAAO,CAAE,QAAQ,MAAM,CAAC,KAAK,CAAE,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAE,cAAc,KAAO,CAC3E,wBAAU,CAAG,cAAC,CAAG,cAAE,CAAE,WAAW,IAAI,CAAC,CACrC,+CAAM,CAAE,QAAQ,IAAI,CAAC"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let tcode = "";
  let chapter = "";
  let exercise = "";
  let filename = "";
  let description = "";
  let tagsCsv = "";
  const STATUS = ["draft", "ready", "published", "archived"];
  $$result.css.add(css);
  return `<h1 class="text-xl mb-4" data-svelte-h="svelte-19ptru9">Upload JSON (lean)</h1>  <div class="space-y-4 svelte-7lwlo8"><div class="grid gap-3 md:grid-cols-3 svelte-7lwlo8"><div><label for="tcode" class="svelte-7lwlo8" data-svelte-h="svelte-p9rvsg">tcode</label> <input id="tcode" placeholder="e.g. fbise9math" class="svelte-7lwlo8"${add_attribute("value", tcode, 0)}></div> <div><label for="chapter" class="svelte-7lwlo8" data-svelte-h="svelte-qokmn0">chapter</label> <input id="chapter" inputmode="numeric" placeholder="e.g. 11" class="svelte-7lwlo8"${add_attribute("value", chapter, 0)}></div> <div><label for="exercise" class="svelte-7lwlo8" data-svelte-h="svelte-1p5q6ju">exercise</label> <input id="exercise" placeholder="e.g. 1.1" class="svelte-7lwlo8"${add_attribute("value", exercise, 0)}></div></div> <div class="grid gap-3 md:grid-cols-3 svelte-7lwlo8"><div><label for="file" class="svelte-7lwlo8" data-svelte-h="svelte-1pesgvy">.json file</label> <input id="file" type="file" accept="application/json,.json" class="svelte-7lwlo8"></div> <div><label for="filename" class="svelte-7lwlo8" data-svelte-h="svelte-galfm8">filename (auto)</label> <input id="filename" placeholder="auto from file" class="svelte-7lwlo8"${add_attribute("value", filename, 0)}></div> <div><label for="status" class="svelte-7lwlo8" data-svelte-h="svelte-m1ytxa">status</label> <select id="status" class="svelte-7lwlo8"><option value="" data-svelte-h="svelte-7musmw">(auto)</option>${each(STATUS, (s) => {
    return `<option${add_attribute("value", s, 0)}>${escape(s)}</option>`;
  })}</select></div></div> <div class="grid gap-3 md:grid-cols-2 svelte-7lwlo8"><div><label for="description" class="svelte-7lwlo8" data-svelte-h="svelte-1v632oe">description</label> <input id="description" placeholder="optional" class="svelte-7lwlo8"${add_attribute("value", description, 0)}></div> <div><label for="tags" class="svelte-7lwlo8" data-svelte-h="svelte-s5v501">tags (csv)</label> <input id="tags" placeholder="algebra, basics" class="svelte-7lwlo8"${add_attribute("value", tagsCsv, 0)}></div></div> <div class="flex items-center gap-3 svelte-7lwlo8"><button ${""} class="svelte-7lwlo8">${escape("Upload JSON")}</button> ${``} ${``}</div> <p class="text-xs opacity-70 svelte-7lwlo8" data-svelte-h="svelte-1nweog4">Tip: You can also drag &amp; drop a .json file anywhere on this form.</p> </div>`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-BvR4WiVj.js.map
