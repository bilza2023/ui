import { c as create_ssr_component, k as createEventDispatcher, d as escape, e as each } from './ssr-DD2Fi2eU.js';

const css = {
  code: ".comment-panel.svelte-15oo2l3{padding:12px 14px;color:#E8D7BD}textarea.svelte-15oo2l3{width:100%;min-height:90px;padding:10px 12px;border-radius:10px;border:1px solid #5a3a1a;background:#E8D7BD;color:#1e1006;resize:vertical;outline:none}textarea.svelte-15oo2l3:focus{border-color:#C4A77F;box-shadow:0 0 0 2px rgba(196, 167, 127, 0.2)}.actions.svelte-15oo2l3{display:flex;align-items:center;gap:10px;margin-top:8px}.btn.svelte-15oo2l3{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:1px solid #C4A77F;background:transparent;color:#E8D7BD;padding:6px 12px;border-radius:10px;cursor:pointer;font:inherit}.btn[disabled].svelte-15oo2l3{opacity:0.6;cursor:not-allowed}.hint.svelte-15oo2l3{color:#C4A77F;opacity:0.85}.err.svelte-15oo2l3{color:#ffb3b3;font-size:0.9rem;margin-top:6px}.msg.svelte-15oo2l3{color:#b7ffc2;font-size:0.9rem;margin-top:6px}.comments-list.svelte-15oo2l3{margin-top:12px;border-top:1px solid #5a3a1a;padding-top:10px}.comment-item.svelte-15oo2l3{margin-bottom:10px}.comment-text.svelte-15oo2l3{color:#fff}.comment-meta.svelte-15oo2l3{font-size:0.8rem;color:#C4A77F}",
  map: `{"version":3,"file":"Comment.svelte","sources":["Comment.svelte"],"sourcesContent":["\\n\\n<script>\\n    import { onMount, createEventDispatcher } from 'svelte';\\n    import { browser } from '$app/environment';\\n  \\n    export let contentId = null; // required (e.g., filename)\\n    export let userId = null;    // optional; display-only hint\\n    export let authToken = null; // optional; defaults to localStorage token\\n  \\n    let text = '';\\n    let sending = false;\\n    let err = '';\\n    let msg = '';\\n    let comments = [];\\n  \\n    const ENDPOINT = '/api/comment';\\n    const dispatch = createEventDispatcher();\\n  \\n    function reset() { err = ''; msg = ''; }\\n  \\n    function getAuthToken() {\\n      if (authToken) return authToken;\\n      if (!browser) return null;\\n      try { return localStorage.getItem('token') || null; } catch { return null; }\\n    }\\n  \\n    async function fetchComments() {\\n      if (!contentId) return;\\n      try {\\n        const res = await fetch(\`\${ENDPOINT}?content_id=\${encodeURIComponent(contentId)}\`);\\n        const data = await res.json();\\n        if (res.ok && data?.ok) {\\n          comments = data.comments || [];\\n        }\\n      } catch (e) {\\n        console.error('fetchComments error', e);\\n      }\\n    }\\n  \\n    async function postComment() {\\n      reset();\\n      const commentText = (text ?? '').trim();\\n      if (!contentId) { err = 'Missing contentId.'; return; }\\n      if (!commentText) { err = 'Please write a comment first.'; return; }\\n  \\n      sending = true;\\n      try {\\n        const headers = { 'content-type': 'application/json' };\\n        const token = getAuthToken();\\n        if (token) headers['authorization'] = \`Bearer \${token}\`;\\n  \\n        const res = await fetch(ENDPOINT, {\\n          method: 'POST',\\n          headers,\\n          body: JSON.stringify({ content_id: contentId, text: commentText })\\n        });\\n  \\n        const data = await res.json();\\n        if (!res.ok || data?.ok === false) {\\n          throw new Error(data?.message || \`HTTP \${res.status}\`);\\n        }\\n        msg = 'Comment posted.';\\n        text = '';\\n        dispatch('posted', { comment: data.comment });\\n        await fetchComments();\\n      } catch (e) {\\n        err = e?.message || 'Could not post comment.';\\n        if (!getAuthToken()) err = 'Please sign in to comment.';\\n      } finally {\\n        sending = false;\\n      }\\n    }\\n  \\n    onMount(fetchComments);\\n  <\/script>\\n  \\n  <div class=\\"comment-panel\\">\\n    <textarea\\n      bind:value={text}\\n      rows=\\"3\\"\\n      placeholder=\\"Write a comment…\\"\\n      on:input={reset}\\n    />\\n    <div class=\\"actions\\">\\n      <button\\n        class=\\"btn\\"\\n        on:click={postComment}\\n        disabled={sending || !contentId || !(text || '').trim()}\\n      >\\n        {#if sending}Posting…{/if}\\n        {#if !sending}Post Comment{/if}\\n      </button>\\n      {#if !userId}\\n        <small class=\\"hint\\">Sign in to post with your name.</small>\\n      {/if}\\n    </div>\\n  \\n    {#if err}<div class=\\"err\\">{err}</div>{/if}\\n    {#if msg}<div class=\\"msg\\">{msg}</div>{/if}\\n  \\n    {#if comments.length}\\n      <div class=\\"comments-list\\">\\n        {#each comments as c}\\n          <div class=\\"comment-item\\">\\n            <div class=\\"comment-text\\">{c.text}</div>\\n            <div class=\\"comment-meta\\">{new Date(c.created_at).toLocaleString()}</div>\\n          </div>\\n        {/each}\\n      </div>\\n    {/if}\\n  </div>\\n  \\n  <style>\\n    .comment-panel { padding: 12px 14px; color: #E8D7BD; }\\n    textarea {\\n      width: 100%;\\n      min-height: 90px;\\n      padding: 10px 12px;\\n      border-radius: 10px;\\n      border: 1px solid #5a3a1a;\\n      background: #E8D7BD;\\n      color: #1e1006;\\n      resize: vertical;\\n      outline: none;\\n    }\\n    textarea:focus {\\n      border-color: #C4A77F;\\n      box-shadow: 0 0 0 2px rgba(196, 167, 127, 0.2);\\n    }\\n    .actions { display: flex; align-items: center; gap: 10px; margin-top: 8px; }\\n    .btn {\\n      -webkit-appearance: none;\\n         -moz-appearance: none;\\n              appearance: none; border: 1px solid #C4A77F; background: transparent; color: #E8D7BD;\\n      padding: 6px 12px; border-radius: 10px; cursor: pointer; font: inherit;\\n    }\\n    .btn[disabled] { opacity: 0.6; cursor: not-allowed; }\\n    .hint { color: #C4A77F; opacity: 0.85; }\\n    .err { color: #ffb3b3; font-size: 0.9rem; margin-top: 6px; }\\n    .msg { color: #b7ffc2; font-size: 0.9rem; margin-top: 6px; }\\n    .comments-list { margin-top: 12px; border-top: 1px solid #5a3a1a; padding-top: 10px; }\\n    .comment-item { margin-bottom: 10px; }\\n    .comment-text { color: #fff; }\\n    .comment-meta { font-size: 0.8rem; color: #C4A77F; }\\n  </style>\\n  "],"names":[],"mappings":"AAkHI,6BAAe,CAAE,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,OAAS,CACrD,uBAAS,CACP,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,QAAQ,CAChB,OAAO,CAAE,IACX,CACA,uBAAQ,MAAO,CACb,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAC/C,CACA,uBAAS,CAAE,OAAO,CAAE,IAAI,CAAE,WAAW,CAAE,MAAM,CAAE,GAAG,CAAE,IAAI,CAAE,UAAU,CAAE,GAAK,CAC3E,mBAAK,CACH,kBAAkB,CAAE,IAAI,CACrB,eAAe,CAAE,IAAI,CAChB,UAAU,CAAE,IAAI,CAAE,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,UAAU,CAAE,WAAW,CAAE,KAAK,CAAE,OAAO,CAC5F,OAAO,CAAE,GAAG,CAAC,IAAI,CAAE,aAAa,CAAE,IAAI,CAAE,MAAM,CAAE,OAAO,CAAE,IAAI,CAAE,OACjE,CACA,IAAI,CAAC,QAAQ,gBAAE,CAAE,OAAO,CAAE,GAAG,CAAE,MAAM,CAAE,WAAa,CACpD,oBAAM,CAAE,KAAK,CAAE,OAAO,CAAE,OAAO,CAAE,IAAM,CACvC,mBAAK,CAAE,KAAK,CAAE,OAAO,CAAE,SAAS,CAAE,MAAM,CAAE,UAAU,CAAE,GAAK,CAC3D,mBAAK,CAAE,KAAK,CAAE,OAAO,CAAE,SAAS,CAAE,MAAM,CAAE,UAAU,CAAE,GAAK,CAC3D,6BAAe,CAAE,UAAU,CAAE,IAAI,CAAE,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,WAAW,CAAE,IAAM,CACrF,4BAAc,CAAE,aAAa,CAAE,IAAM,CACrC,4BAAc,CAAE,KAAK,CAAE,IAAM,CAC7B,4BAAc,CAAE,SAAS,CAAE,MAAM,CAAE,KAAK,CAAE,OAAS"}`
};
const Comment = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { contentId = null } = $$props;
  let { userId = null } = $$props;
  let { authToken = null } = $$props;
  let comments = [];
  createEventDispatcher();
  if ($$props.contentId === void 0 && $$bindings.contentId && contentId !== void 0) $$bindings.contentId(contentId);
  if ($$props.userId === void 0 && $$bindings.userId && userId !== void 0) $$bindings.userId(userId);
  if ($$props.authToken === void 0 && $$bindings.authToken && authToken !== void 0) $$bindings.authToken(authToken);
  $$result.css.add(css);
  return `<div class="comment-panel svelte-15oo2l3"><textarea rows="3" placeholder="Write a comment…" class="svelte-15oo2l3">${escape("")}</textarea> <div class="actions svelte-15oo2l3"><button class="btn svelte-15oo2l3" ${!contentId || !"".trim() ? "disabled" : ""}>${``} ${`Post Comment`}</button> ${!userId ? `<small class="hint svelte-15oo2l3" data-svelte-h="svelte-17wgfib">Sign in to post with your name.</small>` : ``}</div> ${``} ${``} ${comments.length ? `<div class="comments-list svelte-15oo2l3">${each(comments, (c) => {
    return `<div class="comment-item svelte-15oo2l3"><div class="comment-text svelte-15oo2l3">${escape(c.text)}</div> <div class="comment-meta svelte-15oo2l3">${escape(new Date(c.created_at).toLocaleString())}</div> </div>`;
  })}</div>` : ``} </div>`;
});

export { Comment as C };
//# sourceMappingURL=Like.svelte_svelte_type_style_lang-DV9r_NbM.js.map
