{"version":3,"file":"_page.svelte-DWOzLLjp.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/player/_page.svelte.js"],"sourcesContent":["import { c as create_ssr_component, b as subscribe, o as onDestroy, v as validate_component } from \"../../../chunks/ssr.js\";\nimport { p as page } from \"../../../chunks/stores.js\";\nimport \"howler\";\nimport { C as Comment } from \"../../../chunks/Like.svelte_svelte_type_style_lang.js\";\nimport \"@sveltejs/kit/internal\";\nimport \"../../../chunks/exports.js\";\nimport \"../../../chunks/utils.js\";\nimport \"../../../chunks/state.svelte.js\";\n/* empty css                                                   */\nconst css = {\n  code: \".center.svelte-12avh67{display:flex;align-items:center;justify-content:center;height:100vh;color:#666}.error.svelte-12avh67{color:#b00020}taleem-slides.svelte-12avh67{display:block;width:100%;height:100vh;color:#222}\",\n  map: `{\"version\":3,\"file\":\"+page.svelte\",\"sources\":[\"+page.svelte\"],\"sourcesContent\":[\"\\\\n<svelte:head>\\\\n  <script type=\\\\\"module\\\\\" src=\\\\\"/components/taleem-slides/taleem-slides.js\\\\\"><\\/script>\\\\n</svelte:head>\\\\n\\\\n<script>\\\\n  \\\\n  import { onMount, onDestroy } from 'svelte';\\\\n  import { page } from '$app/stores';\\\\n  import { getDeck } from '$lib/services/deckService.js';\\\\n  import { createSoundPlayer, detectSoundUrl } from '$lib/services/soundServices.js';\\\\n  import { clampTime, getDeckEnd } from '$lib/taleemPlayer/player-utility.js';\\\\n  import Comment from \\\\\"$lib/Comment.svelte\\\\\";\\\\n  import NavBar from '$lib/taleemSlides/NavBar.svelte';\\\\n  import Like from \\\\\"$lib/Like.svelte\\\\\";\\\\n\\\\n  const anchorId = \\\\\"playerPage\\\\\";\\\\n  let userId = null;\\\\n  // ---- state (single source of truth) ----\\\\n  let deck = null;           // slides[]\\\\n  let background = null;     // kept for future; CE doesn't need it\\\\n  let soundUrl = null;\\\\n  let player = null;\\\\n  let currentTime = 0;\\\\n  let deckEnd = 0;\\\\n  let loading = true;\\\\n  let errorMsg = null;\\\\n  let slidesEl;\\\\n  let filename=null;\\\\nlet authToken = null;\\\\n\\\\n  async function init() {\\\\n    loading = true;\\\\n    errorMsg = null;\\\\n\\\\n    authToken = localStorage.getItem('token');\\\\n    const params = new URLSearchParams($page.url.search);\\\\n    filename = params.get('filename');\\\\n    if (!filename) {\\\\n      errorMsg = 'Filename parameter is required.';\\\\n      loading = false;\\\\n      return;\\\\n    }\\\\n\\\\n    try {\\\\n      // 1) Load deck\\\\n      const fullDeck = await getDeck(filename); // { version, deck, background? }\\\\n      deck = fullDeck.deck;\\\\n      background = fullDeck.background ?? null;\\\\n\\\\n      // 2) Time boundaries\\\\n      deckEnd = getDeckEnd(deck);\\\\n      currentTime = 0;\\\\n\\\\n      // Immediately feed CE if it's already mounted (defensive)\\\\n      if (slidesEl && deck) slidesEl.deck = deck;\\\\n\\\\n      // 3) Auto-detect audio once (client-side), no logging on 404\\\\n      soundUrl = await detectSoundUrl(filename, fetch); // '/sounds/<filename>.opus' or null\\\\n\\\\n      // 4) Create timing source (Howler if url, Timer otherwise)\\\\n      player = createSoundPlayer(soundUrl);\\\\n\\\\n      // 5) Ticks → update app state\\\\n      player.onTick((t) => {\\\\n        currentTime = clampTime(deck, t);\\\\n        if (currentTime >= deckEnd) {\\\\n          currentTime = deckEnd;\\\\n          player.pause();\\\\n        }\\\\n      });\\\\n    } catch (err) {\\\\n      errorMsg = err?.message || 'Failed to load deck.';\\\\n    } finally {\\\\n      loading = false;\\\\n    }\\\\n  }\\\\n\\\\n  // Controls\\\\n  function play()  { player?.play?.(); }\\\\n  function pause() { player?.pause?.(); }\\\\n  function seek(t) {\\\\n    if (!player) return;\\\\n    player.seek(t);\\\\n    currentTime = clampTime(deck, t); // reflect immediately\\\\n  }\\\\n  function stop() {\\\\n    if (!player) return;\\\\n    player.pause();\\\\n    player.seek(0);\\\\n    currentTime = 0;\\\\n  }\\\\n\\\\n  // Reactive prop push into CE\\\\n  $: if (slidesEl && deck) slidesEl.deck = deck;\\\\n  $: if (slidesEl)          slidesEl.currentTime = currentTime;\\\\n\\\\n  onMount(() => {\\\\n    const token = localStorage.getItem(\\\\\"token\\\\\");\\\\n    if(token){userId = token;}\\\\n    \\\\n    init();\\\\n  });\\\\n  onDestroy(() => { player?.destroy?.(); });\\\\n<\\/script>\\\\n\\\\n{#if loading}\\\\n  <div class=\\\\\"center\\\\\">Loading…</div>\\\\n{:else if errorMsg}\\\\n  <div class=\\\\\"center error\\\\\">{errorMsg}</div>\\\\n{:else}\\\\n  {#if deck && deck.length}\\\\n    <!-- VISUALS: use the precompiled Web Component -->\\\\n    <taleem-slides bind:this={slidesEl}></taleem-slides>\\\\n\\\\n    <!-- Controls: simple seek bar (play/pause/stop can be added as buttons if you like) -->\\\\n    <NavBar {currentTime} duration={deckEnd} onSeek={seek} />\\\\n  {:else}\\\\n    <div class=\\\\\"center\\\\\">Preparing deck…</div>\\\\n  {/if}\\\\n{/if}\\\\n\\\\n\\\\n\\\\n<div style=\\\\\"background-color:#594112\\\\\">\\\\n{#if authToken}\\\\n\\\\n  <Like contentId={filename} authToken={authToken} />\\\\n\\\\n{/if}\\\\n\\\\n\\\\n<!-- Player +page.svelte -->\\\\n<div class=\\\\\"mt-5  px-40\\\\\">\\\\n  <Comment\\\\n    contentId={filename}  \\\\n    userId={userId}      \\\\n  />\\\\n</div>\\\\n\\\\n</div>\\\\n\\\\n<style>\\\\n  .center { display:flex; align-items:center; justify-content:center; height:100vh; color:#666; }\\\\n  .error { color:#b00020; }\\\\n  /* Prevent initial white text flash by avoiding CE default paint before props */\\\\n  taleem-slides { display:block; width:100%; height:100vh; color:#222; }\\\\n</style>\\\\n\"],\"names\":[],\"mappings\":\"AA+IE,sBAAQ,CAAE,QAAQ,IAAI,CAAE,YAAY,MAAM,CAAE,gBAAgB,MAAM,CAAE,OAAO,KAAK,CAAE,MAAM,IAAM,CAC9F,qBAAO,CAAE,MAAM,OAAS,CAExB,4BAAc,CAAE,QAAQ,KAAK,CAAE,MAAM,IAAI,CAAE,OAAO,KAAK,CAAE,MAAM,IAAM\"}`\n};\nconst Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  let $$unsubscribe_page;\n  $$unsubscribe_page = subscribe(page, (value) => value);\n  let userId = null;\n  let filename = null;\n  onDestroy(() => {\n  });\n  $$result.css.add(css);\n  $$unsubscribe_page();\n  return `${$$result.head += `<!-- HEAD_svelte-1atrt0p_START --><script type=\"module\" src=\"/components/taleem-slides/taleem-slides.js\" data-svelte-h=\"svelte-1xn108w\"><\\/script><!-- HEAD_svelte-1atrt0p_END -->`, \"\"}  ${`<div class=\"center svelte-12avh67\" data-svelte-h=\"svelte-y7ce8\">Loading…</div>`} <div style=\"background-color:#594112\">${``}  <div class=\"mt-5 px-40\">${validate_component(Comment, \"Comment\").$$render($$result, { contentId: filename, userId }, {}, {})}</div> </div>`;\n});\nexport {\n  Page as default\n};\n"],"names":[],"mappings":";;;;;;;AAQA;AACA,MAAM,GAAG,GAAG;AACZ,EAAE,IAAI,EAAE,0NAA0N;AAClO,EAAE,GAAG,EAAE,CAAC,kkJAAkkJ;AAC1kJ,CAAC;AACI,MAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,KAAK;AAC5E,EAAE,IAAI,kBAAkB;AACxB,EAAE,kBAAkB,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AACxD,EAAE,IAAI,MAAM,GAAG,IAAI;AACnB,EAAE,IAAI,QAAQ,GAAG,IAAI;AACrB,EAAE,SAAS,CAAC,MAAM;AAClB,EAAE,CAAC,CAAC;AACJ,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACvB,EAAE,kBAAkB,EAAE;AACtB,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,kLAAkL,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,8EAA8E,CAAC,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAC,0BAA0B,EAAE,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC;AACpe,CAAC;;;;"}