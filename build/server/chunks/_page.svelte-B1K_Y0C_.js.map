{"version":3,"file":"_page.svelte-B1K_Y0C_.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/admin/editor/_page.svelte.js"],"sourcesContent":["import { c as create_ssr_component, b as subscribe, v as validate_component } from \"../../../../chunks/ssr.js\";\nimport { p as page } from \"../../../../chunks/stores.js\";\nimport { N as Nav } from \"../../../../chunks/Nav2.js\";\nconst css = {\n  code: 'body{background-color:#1f2937;color:#f3f4f6}.audio-panel.svelte-lskhmy{padding:1rem}.time-display.svelte-lskhmy{padding:0 1rem 1rem;font-size:0.875rem;color:#a0aec0}.slide.svelte-lskhmy{padding:1rem;border-bottom:1px solid #374151}.slide-header.svelte-lskhmy{display:flex;justify-content:space-between;align-items:center}.item.svelte-lskhmy{padding-left:1.5rem;font-size:0.875rem;color:#e5e7eb;margin-top:0.5rem}input[type=\"number\"].svelte-lskhmy,input[type=\"text\"].svelte-lskhmy{width:4.5rem;background-color:#374151;color:#f3f4f6;border:none;padding:0.25rem;border-radius:0.25rem;text-align:right}input[type=\"text\"].svelte-lskhmy{width:100%;text-align:left}button.svelte-lskhmy{margin-left:0.5rem;padding:0.25rem 0.5rem;border-radius:0.25rem;background-color:#4a5568;color:#edf2f7;border:none;cursor:pointer;font-size:0.75rem}button.svelte-lskhmy:hover{background-color:#2d3748}button.set-start.svelte-lskhmy{background-color:#6b7280}button.set-start.svelte-lskhmy:disabled{opacity:0.5;cursor:not-allowed}button.set-end.svelte-lskhmy{font-size:smaller;background-color:#16a34a}button.set-show.svelte-lskhmy{background-color:#7c3607}button.set-show-zero.svelte-lskhmy{background-color:#11038f}button.delete-item.svelte-lskhmy{background-color:#e53e3e}.centered.svelte-lskhmy{text-align:center;margin-top:2rem}.error.svelte-lskhmy{color:#e53e3e;text-align:center;margin-top:1rem}',\n  map: '{\"version\":3,\"file\":\"+page.svelte\",\"sources\":[\"+page.svelte\"],\"sourcesContent\":[\"<script lang=\\\\\"ts\\\\\">import { onMount } from \\\\\"svelte\\\\\";\\\\nimport { page } from \\\\\"$app/stores\\\\\";\\\\nimport Nav from \\\\\"../../../lib/Nav.svelte\\\\\";\\\\nlet deck = null;\\\\nlet deckLoaded = false;\\\\nlet error = \\\\\"\\\\\";\\\\nlet audio = null;\\\\nlet currentTime = 0;\\\\nlet soundUrl = \\\\\"/sounds/default.opus\\\\\";\\\\nconst tick = () => {\\\\n  if (audio) currentTime = audio.currentTime;\\\\n  requestAnimationFrame(tick);\\\\n};\\\\nfunction setSlideEnd(i) {\\\\n  if (!deck?.deck) return;\\\\n  const t = parseFloat(currentTime.toFixed(2));\\\\n  deck.deck[i].end = t;\\\\n  if (deck.deck[i + 1]) deck.deck[i + 1].start = t;\\\\n  deck = { ...deck };\\\\n}\\\\nfunction setSlideStart(i) {\\\\n  if (!deck?.deck || i === 0) return;\\\\n  const t = parseFloat(currentTime.toFixed(2));\\\\n  deck.deck[i - 1].end = t;\\\\n  deck.deck[i].start = t;\\\\n  deck = { ...deck };\\\\n}\\\\nfunction setShowAt(item) {\\\\n  item.showAt = parseFloat(currentTime.toFixed(1));\\\\n  deck = { ...deck };\\\\n}\\\\nfunction setShowAtZero(item) {\\\\n  item.showAt = 0;\\\\n  deck = { ...deck };\\\\n}\\\\nfunction deleteItem(slideIndex, itemIndex) {\\\\n  if (!deck?.deck) return;\\\\n  deck.deck[slideIndex].data.splice(itemIndex, 1);\\\\n  deck = { ...deck };\\\\n}\\\\nasync function saveTimings() {\\\\n  const filename = $page.url.searchParams.get(\\\\\"filename\\\\\") ?? \\\\\"\\\\\";\\\\n  const res = await fetch(`/admin/timings?filename=${encodeURIComponent(filename)}`, {\\\\n    method: \\\\\"POST\\\\\",\\\\n    headers: { \\\\\"Content-Type\\\\\": \\\\\"application/json\\\\\" },\\\\n    body: JSON.stringify(deck)\\\\n  });\\\\n  if (!res.ok) {\\\\n    let errMsg;\\\\n    try {\\\\n      const data = await res.json();\\\\n      errMsg = data.error ?? JSON.stringify(data);\\\\n    } catch {\\\\n      errMsg = await res.text();\\\\n    }\\\\n    alert(`\\\\\\\\u274C Save failed: ${errMsg}`);\\\\n    return false;\\\\n  }\\\\n  alert(\\\\\"\\\\\\\\u2705 Save successful\\\\\");\\\\n  return true;\\\\n}\\\\nasync function saveAndDownload() {\\\\n  const ok = await saveTimings();\\\\n  if (ok) {\\\\n    downloadTimings();\\\\n  }\\\\n}\\\\nfunction downloadTimings() {\\\\n  const filename = $page.url.searchParams.get(\\\\\"filename\\\\\") ?? \\\\\"deck\\\\\";\\\\n  const blob = new Blob([JSON.stringify(deck, null, 2)], {\\\\n    type: \\\\\"application/json\\\\\"\\\\n  });\\\\n  const url = URL.createObjectURL(blob);\\\\n  const a = document.createElement(\\\\\"a\\\\\");\\\\n  a.href = url;\\\\n  a.download = `${filename}.json`;\\\\n  document.body.appendChild(a);\\\\n  a.click();\\\\n  document.body.removeChild(a);\\\\n  URL.revokeObjectURL(url);\\\\n}\\\\nlet soundExists = false;\\\\nonMount(async () => {\\\\n  tick();\\\\n  const filename = $page.url.searchParams.get(\\\\\"filename\\\\\");\\\\n  if (!filename) {\\\\n    error = \\\\\"No filename provided\\\\\";\\\\n    return;\\\\n  }\\\\n  try {\\\\n    const head = await fetch(`/sounds/${filename}.opus`, { method: \\\\\"HEAD\\\\\" });\\\\n    if (head.ok) {\\\\n      soundUrl = `/sounds/${filename}.opus`;\\\\n      soundExists = true;\\\\n    }\\\\n  } catch {\\\\n  }\\\\n  try {\\\\n    const res = await fetch(`/admin/timings?filename=${encodeURIComponent(filename)}`);\\\\n    if (!res.ok) {\\\\n      const body = await res.json();\\\\n      throw new Error(body.error || res.statusText);\\\\n    }\\\\n    deck = await res.json();\\\\n    deckLoaded = true;\\\\n  } catch (e) {\\\\n    error = e.message;\\\\n  }\\\\n});\\\\n<\\/script>\\\\n\\\\n<Nav />\\\\n<h1 style=\\\\\"width: 100%; border: 2px solid #facc15; border-radius: 0.375rem; text-align: center; font-size: 1.2rem; padding:6px; margin:2px; background-color: #0f4502\\\\\">\\\\n  ðŸ’¡ Timing Page\\\\n</h1>\\\\n\\\\n<div class=\\\\\"timing-actions\\\\\" style=\\\\\"margin: 1rem 0;\\\\\">\\\\n  <button on:click={saveTimings} class=\\\\\"btn\\\\\">\\\\n    Save\\\\n  </button>\\\\n  <button\\\\n    on:click={saveAndDownload}\\\\n    class=\\\\\"btn\\\\\"\\\\n    style=\\\\\"margin-left: 0.5rem;\\\\\"\\\\n  >\\\\n    Save and Download\\\\n  </button>\\\\n</div>\\\\n\\\\n{#if error}\\\\n  <p class=\\\\\"error\\\\\">Error: {error}</p>\\\\n{:else if !deckLoaded}\\\\n  <p class=\\\\\"centered\\\\\">Loading deckâ€¦</p>\\\\n{:else}\\\\n  {#if soundExists}\\\\n    <div class=\\\\\"audio-panel\\\\\">\\\\n      <audio bind:this={audio} src={soundUrl} controls class=\\\\\"w-full\\\\\"></audio>\\\\n    </div>\\\\n  {:else}\\\\n    <h1 style=\\\\\"width: 100%; border: 2px solid #facc15; border-radius: 0.375rem; text-align: center; font-size: 1.2rem; padding:6px; margin:2px; background-color: #0f4502\\\\\">\\\\n      ðŸ’¡ Sound not found\\\\n    </h1>\\\\n  {/if}\\\\n\\\\n  <div class=\\\\\"time-display\\\\\">\\\\n    Current Time: {currentTime.toFixed(2)}s\\\\n  </div>\\\\n\\\\n  {#each deck.deck as slide, slideIndex}\\\\n    <div class=\\\\\"slide\\\\\">\\\\n      <div class=\\\\\"slide-header\\\\\">\\\\n        <strong>Slide {slideIndex + 1} â€” {slide.type}</strong>\\\\n        <button\\\\n          class=\\\\\"set-start\\\\\"\\\\n          on:click={() => setSlideStart(slideIndex)}\\\\n          disabled={slideIndex === 0}\\\\n        >\\\\n          Set Start = Now\\\\n        </button>\\\\n      </div>\\\\n\\\\n      {#each slide.data as item, itemIndex}\\\\n        <div class=\\\\\"item\\\\\">\\\\n          <div style=\\\\\"display: flex; align-items: center; gap: 0.5rem;\\\\\">\\\\n            <span>showAt:</span>\\\\n            <input type=\\\\\"number\\\\\" bind:value={item.showAt} step=\\\\\"0.0\\\\\" />\\\\n            <button class=\\\\\"set-show-zero\\\\\" on:click={() => setShowAtZero(item)}>\\\\n              0\\\\n            </button>\\\\n            <button class=\\\\\"set-show\\\\\" on:click={() => setShowAt(item)}>\\\\n              Now\\\\n            </button>\\\\n            <span class=\\\\\"bg-red-950 \\\\\">{item.name || item.type}:</span>\\\\n            <input type=\\\\\"text\\\\\" bind:value={item.content} placeholder=\\\\\"Edit content\\\\\" />\\\\n            <button class=\\\\\"delete-item\\\\\" on:click={() => deleteItem(slideIndex, itemIndex)}>\\\\n              Delete\\\\n            </button>\\\\n          </div>\\\\n        </div>\\\\n      {/each}\\\\n\\\\n      <div style=\\\\\"display: flex; align-items: center; margin-top: 0.5rem;\\\\\">\\\\n        <label>\\\\n          Start:\\\\n          <input type=\\\\\"number\\\\\" bind:value={slide.start} step=\\\\\"0.01\\\\\" />\\\\n        </label>\\\\n        <label style=\\\\\"margin-left: 1rem;\\\\\">\\\\n          End:\\\\n          <input type=\\\\\"number\\\\\" bind:value={slide.end} step=\\\\\"0.01\\\\\" />\\\\n        </label>\\\\n        <button class=\\\\\"set-end\\\\\" on:click={() => setSlideEnd(slideIndex)}>\\\\n          Set End = Now\\\\n        </button>\\\\n      </div>\\\\n    </div>\\\\n  {/each}\\\\n{/if}\\\\n\\\\n<style>\\\\n  :global(body) {\\\\n    background-color: #1f2937; /* gray-800 */\\\\n    color: #f3f4f6; /* gray-100 */\\\\n  }\\\\n  .audio-panel {\\\\n    padding: 1rem;\\\\n  }\\\\n  .time-display {\\\\n    padding: 0 1rem 1rem;\\\\n    font-size: 0.875rem;\\\\n    color: #a0aec0; /* gray-400 */\\\\n  }\\\\n  .slide {\\\\n    padding: 1rem;\\\\n    border-bottom: 1px solid #374151; /* gray-700 */\\\\n  }\\\\n  .slide-header {\\\\n    display: flex;\\\\n    justify-content: space-between;\\\\n    align-items: center;\\\\n  }\\\\n  .item {\\\\n    padding-left: 1.5rem;\\\\n    font-size: 0.875rem;\\\\n    color: #e5e7eb; /* gray-200 */\\\\n    margin-top: 0.5rem;\\\\n  }\\\\n  input[type=\\\\\"number\\\\\"], input[type=\\\\\"text\\\\\"] {\\\\n    width: 4.5rem;\\\\n    background-color: #374151;\\\\n    color: #f3f4f6;\\\\n    border: none;\\\\n    padding: 0.25rem;\\\\n    border-radius: 0.25rem;\\\\n    text-align: right;\\\\n  }\\\\n  input[type=\\\\\"text\\\\\"] {\\\\n    width: 100%; /* Make text input full width for better editing */\\\\n    text-align: left;\\\\n  }\\\\n  button {\\\\n    margin-left: 0.5rem;\\\\n    padding: 0.25rem 0.5rem;\\\\n    border-radius: 0.25rem;\\\\n    background-color: #4a5568; /* gray-600 */\\\\n    color: #edf2f7;\\\\n    border: none;\\\\n    cursor: pointer;\\\\n    font-size: 0.75rem;\\\\n  }\\\\n  button:hover {\\\\n    background-color: #2d3748; /* gray-700 */\\\\n  }\\\\n  button.set-start {\\\\n    background-color: #6b7280; /* gray-500 */\\\\n  }\\\\n  button.set-start:disabled {\\\\n    opacity: 0.5;\\\\n    cursor: not-allowed;\\\\n  }\\\\n  button.set-end {\\\\n    font-size: smaller;\\\\n    background-color: #16a34a; /* green-600 */\\\\n  }\\\\n  button.set-show {\\\\n    background-color: #7c3607; /* blue-500 */\\\\n  }\\\\n  button.set-show-zero {\\\\n    background-color: #11038f; /* blue-500 */\\\\n  }\\\\n  button.delete-item {\\\\n    background-color: #e53e3e; /* red-600 */\\\\n  }\\\\n  .centered {\\\\n    text-align: center;\\\\n    margin-top: 2rem;\\\\n  }\\\\n  .error {\\\\n    color: #e53e3e; /* red-600 */\\\\n    text-align: center;\\\\n    margin-top: 1rem;\\\\n  }\\\\n</style>\"],\"names\":[],\"mappings\":\"AAuMU,IAAM,CACZ,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OACT,CACA,0BAAa,CACX,OAAO,CAAE,IACX,CACA,2BAAc,CACZ,OAAO,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CACpB,SAAS,CAAE,QAAQ,CACnB,KAAK,CAAE,OACT,CACA,oBAAO,CACL,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAC3B,CACA,2BAAc,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MACf,CACA,mBAAM,CACJ,YAAY,CAAE,MAAM,CACpB,SAAS,CAAE,QAAQ,CACnB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MACd,CACA,KAAK,CAAC,IAAI,CAAC,QAAQ,eAAC,CAAE,KAAK,CAAC,IAAI,CAAC,MAAM,eAAE,CACvC,KAAK,CAAE,MAAM,CACb,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,OAAO,CAChB,aAAa,CAAE,OAAO,CACtB,UAAU,CAAE,KACd,CACA,KAAK,CAAC,IAAI,CAAC,MAAM,eAAE,CACjB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IACd,CACA,oBAAO,CACL,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,aAAa,CAAE,OAAO,CACtB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,OACb,CACA,oBAAM,MAAO,CACX,gBAAgB,CAAE,OACpB,CACA,MAAM,wBAAW,CACf,gBAAgB,CAAE,OACpB,CACA,MAAM,wBAAU,SAAU,CACxB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,WACV,CACA,MAAM,sBAAS,CACb,SAAS,CAAE,OAAO,CAClB,gBAAgB,CAAE,OACpB,CACA,MAAM,uBAAU,CACd,gBAAgB,CAAE,OACpB,CACA,MAAM,4BAAe,CACnB,gBAAgB,CAAE,OACpB,CACA,MAAM,0BAAa,CACjB,gBAAgB,CAAE,OACpB,CACA,uBAAU,CACR,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IACd,CACA,oBAAO,CACL,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IACd\"}'\n};\nconst Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  let $$unsubscribe_page;\n  $$unsubscribe_page = subscribe(page, (value) => value);\n  $$result.css.add(css);\n  $$unsubscribe_page();\n  return `${validate_component(Nav, \"Nav\").$$render($$result, {}, {}, {})} <h1 style=\"width: 100%; border: 2px solid #facc15; border-radius: 0.375rem; text-align: center; font-size: 1.2rem; padding:6px; margin:2px; background-color: #0f4502\" data-svelte-h=\"svelte-b6baqi\">ðŸ’¡ Timing Page</h1> <div class=\"timing-actions\" style=\"margin: 1rem 0;\"><button class=\"btn svelte-lskhmy\" data-svelte-h=\"svelte-mcs0te\">Save</button> <button class=\"btn svelte-lskhmy\" style=\"margin-left: 0.5rem;\" data-svelte-h=\"svelte-cj91f7\">Save and Download</button></div> ${`${`<p class=\"centered svelte-lskhmy\" data-svelte-h=\"svelte-88q0iq\">Loading deckâ€¦</p>`}`}`;\n});\nexport {\n  Page as default\n};\n"],"names":[],"mappings":";;;;;;AAGA,MAAM,GAAG,GAAG;AACZ,EAAE,IAAI,EAAE,q2CAAq2C;AAC72C,EAAE,GAAG,EAAE;AACP,CAAC;AACI,MAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,KAAK;AAC5E,EAAE,IAAI,kBAAkB;AACxB,EAAE,kBAAkB,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AACxD,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACvB,EAAE,kBAAkB,EAAE;AACtB,EAAE,OAAO,CAAC,EAAE,kBAAkB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,0dAA0d,EAAE,CAAC,EAAE,CAAC,iFAAiF,CAAC,CAAC,CAAC,CAAC,CAAC;AAChoB,CAAC;;;;"}