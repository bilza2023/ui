import { c as create_ssr_component, v as validate_component, d as each, e as escape, f as add_attribute, h as null_to_empty } from './ssr-CO7PFcwR.js';
import { N as Nav } from './Nav-8vGg4Ony.js';
import { A as AdminNav } from './AdminNav-FSY0oWpg.js';
import { l as listTcodes, g as getChapters, c as chapterNo, a as getExercises } from './synopsisServices-Cl9miXx7.js';
import './ssr2-6RDSickK.js';
import './state.svelte-BCeRBbkS.js';
import './index2-DD8FmDw3.js';

const css = {
  code: ".wrap.svelte-w704mx.svelte-w704mx{max-width:720px;margin:0 auto;padding:24px 16px;color:var(--primaryText)}.pagehead.svelte-w704mx h1.svelte-w704mx{font-size:1.5rem;font-weight:700;margin:0 0 .25rem;color:var(--primaryText)}.pagehead.svelte-w704mx p.svelte-w704mx{margin:0 0 1rem;font-size:.95rem;color:var(--secondaryText)}.pagehead.svelte-w704mx code.svelte-w704mx{background:color-mix(in oklab, var(--accentColor) 14%, var(--surfaceColor));border:1px solid var(--borderColor);border-radius:6px;padding:1px 6px;color:var(--primaryText)}.upload-form.svelte-w704mx.svelte-w704mx{background:var(--surfaceColor);border-color:var(--borderColor)}.block.svelte-w704mx+.block.svelte-w704mx{margin-top:18px}.block.svelte-w704mx>legend.svelte-w704mx{font-size:.9rem;letter-spacing:.02em;color:var(--secondaryText);margin-bottom:10px;padding:0 4px}.form-grid.svelte-w704mx.svelte-w704mx{display:grid;gap:12px;grid-template-columns:repeat(auto-fit, minmax(200px, 1fr))}.form-grid.two.svelte-w704mx.svelte-w704mx{grid-template-columns:repeat(auto-fit, minmax(260px, 1fr))}.dropgrid.svelte-w704mx.svelte-w704mx{display:grid;gap:14px;grid-template-columns:1.2fr .8fr}@media(max-width: 820px){.dropgrid.svelte-w704mx.svelte-w704mx{grid-template-columns:1fr}}.dropzone.svelte-w704mx.svelte-w704mx{position:relative;min-height:130px;border:2px dashed var(--borderColor);border-radius:14px;background:radial-gradient(1000px 200px at 50% -300px, color-mix(in oklab, var(--accentColor) 10%, transparent), transparent 70%),\n      linear-gradient(180deg, color-mix(in oklab, var(--accentColor) 6%, var(--surfaceColor)), var(--surfaceColor));display:flex;align-items:center;gap:14px;padding:14px 16px;cursor:pointer;transition:border-color .15s ease, background .15s ease, box-shadow .15s ease}.dropzone.is-dragging.svelte-w704mx.svelte-w704mx{border-color:color-mix(in oklab, var(--primaryColor) 55%, var(--borderColor));box-shadow:0 0 0 4px color-mix(in oklab, var(--primaryColor) 20%, var(--backgroundColor));background:radial-gradient(1000px 200px at 50% -300px, color-mix(in oklab, var(--primaryColor) 18%, transparent), transparent 70%),\n      linear-gradient(180deg, color-mix(in oklab, var(--primaryColor) 10%, var(--surfaceColor)), var(--surfaceColor))}.dz-icon.svelte-w704mx.svelte-w704mx{font-size:1.4rem;width:2.5rem;height:2.5rem;line-height:2.5rem;text-align:center;border-radius:12px;border:1px solid var(--borderColor);background:var(--surfaceColor);color:var(--primaryText);flex:0 0 auto}.dz-text.svelte-w704mx.svelte-w704mx{display:flex;flex-direction:column}.dz-text.svelte-w704mx strong.svelte-w704mx{font-weight:700;font-size:.95rem;color:var(--primaryText)}.dz-text.svelte-w704mx small.svelte-w704mx{color:var(--secondaryText);margin-top:2px}.hidden-input.svelte-w704mx.svelte-w704mx{position:absolute;inset:0;opacity:0;pointer-events:none}.sidegrid.svelte-w704mx.svelte-w704mx{display:grid;gap:12px;grid-template-columns:1fr}.actions.svelte-w704mx.svelte-w704mx{display:flex;align-items:center;gap:10px;margin-top:6px;flex-wrap:wrap}.note.svelte-w704mx.svelte-w704mx{padding:.45rem .6rem;border-radius:.5rem;font-size:.9rem;border:1px solid transparent}.note.ok.svelte-w704mx.svelte-w704mx{color:var(--primaryText);background:color-mix(in oklab, var(--secondaryColor) 12%, var(--surfaceColor));border-color:color-mix(in oklab, var(--secondaryColor) 40%, var(--borderColor))}.note.err.svelte-w704mx.svelte-w704mx{color:var(--primaryText);background:color-mix(in oklab, var(--accentColor) 14%, var(--surfaceColor));border-color:color-mix(in oklab, var(--accentColor) 50%, var(--borderColor))}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import Nav from \\"$lib/appComps/Nav.svelte\\";\\n  import AdminNav from \\"$lib/components/AdminNav.svelte\\";\\n  import \\"$lib/styles/forms.css\\"; // ✅ shared, theme-aware\\n\\n  import {\\n    listTcodes,\\n    getChapters,\\n    getExercises,\\n    chapterNo as chapterNoOf\\n  } from \\"$lib/services/synopsisServices.js\\";\\n\\n  // --- Path state (replaces PathPicker) ---\\n  const tcodes = listTcodes(); // [{ tcodeName, ... }]\\n  let tcode = tcodes[0]?.tcodeName ?? \\"\\";\\n  let chapters = [];\\n  let chapterSlug = \\"\\";\\n  let exercises = [];\\n  let exerciseSlug = \\"\\";\\n  let chapterNo = null;\\n\\n  // mirror for your existing payload shape\\n  let path = { tcode: \\"\\", chapterSlug: \\"\\", chapterNo: null, exerciseSlug: \\"\\" };\\n\\n  // --- Meta ---\\n  let status = \\"\\";\\n  let tagsCsv = \\"\\";\\n  let description = \\"\\";\\n\\n  // --- Payload ---\\n  let file = /** @type {File|null} */ (null);\\n  let filename = \\"\\";\\n  let fileEl;\\n\\n  // --- UI ---\\n  let uploading = false;\\n  let msg = \\"\\";\\n  let err = \\"\\";\\n  let dragging = false;\\n\\n  // enable/disable submit\\n  $: canSubmit = !!path.tcode && !!path.chapterNo && !!path.exerciseSlug && !!file;\\n\\n  function resetForm() {\\n    tcode = tcodes[0]?.tcodeName ?? \\"\\";\\n    chapterSlug = \\"\\";\\n    exerciseSlug = \\"\\";\\n    file = null;\\n    filename = \\"\\";\\n    if (fileEl) fileEl.value = \\"\\";\\n    status = \\"\\";\\n    tagsCsv = \\"\\";\\n    description = \\"\\";\\n    msg = \\"\\";\\n    err = \\"\\";\\n  }\\n\\n  function onPick(e) {\\n    const picked = e.target?.files?.[0] ?? null;\\n    file = picked;\\n    filename = picked ? picked.name.replace(/\\\\.(html|htm)$/i, \\"\\") : \\"\\";\\n  }\\n  function onDrop(e) {\\n    e.preventDefault();\\n    const dropped = e.dataTransfer?.files?.[0] ?? null;\\n    file = dropped || null;\\n    filename = file ? file.name.replace(/\\\\.(html|htm)$/i, \\"\\") : \\"\\";\\n    dragging = false;\\n  }\\n  function onDragOver(e) { e.preventDefault(); dragging = true; }\\n  function onDragLeave() { dragging = false; }\\n  function onDropKey(e) {\\n    if (e.key === \\"Enter\\" || e.key === \\" \\") {\\n      e.preventDefault();\\n      fileEl?.click();\\n    }\\n  }\\n\\n  // --- Cascading reactivity ---\\n  $: chapters = tcode ? getChapters(tcode) : [];\\n  $: if (!chapters.find(c => c.filename === chapterSlug)) chapterSlug = \\"\\";\\n\\n  $: chapterNo = (tcode && chapterSlug) ? chapterNoOf(tcode, chapterSlug) : null;\\n  $: exercises = (tcode && chapterSlug) ? getExercises(tcode, chapterSlug) : [];\\n  $: if (!exercises.find(e => e.filename === exerciseSlug)) exerciseSlug = \\"\\";\\n\\n  // mirror into your original \\"path\\" object\\n  $: path = { tcode, chapterSlug, chapterNo, exerciseSlug };\\n\\n  // --- Upload (unchanged endpoint/payload) ---\\n  async function upload() {\\n    err = \\"\\"; msg = \\"\\";\\n    if (!canSubmit) { err = \\"Please fill required fields.\\"; return; }\\n\\n    uploading = true;\\n    try {\\n      const fd = new FormData();\\n      fd.append(\\"tcode\\", path.tcode);\\n      fd.append(\\"chapter\\", String(path.chapterNo));\\n      fd.append(\\"exercise\\", path.exerciseSlug);\\n\\n      if (status.trim())      fd.append(\\"status\\", status.trim());\\n      if (tagsCsv.trim())     fd.append(\\"tags\\", tagsCsv.trim());\\n      if (description.trim()) fd.append(\\"description\\", description.trim());\\n\\n      fd.append(\\"file\\", file);\\n      fd.append(\\"filename\\", filename || file.name.replace(/\\\\.(html|htm)$/i, \\"\\"));\\n\\n      const res  = await fetch(\\"/admin/uploadNotes\\", { method: \\"POST\\", body: fd });\\n      const data = await res.json();\\n      if (!res.ok) err = data?.error ?? \\"Upload failed.\\";\\n      else { msg = \`Uploaded \${data?.uploaded ?? 1} note.\`; resetForm(); }\\n    } catch (e) {\\n      err = e?.message ?? \\"Network error.\\";\\n    } finally {\\n      uploading = false;\\n    }\\n  }\\n<\/script>\\n\\n<Nav />\\n<AdminNav />\\n\\n<section class=\\"wrap\\">\\n  <header class=\\"pagehead\\">\\n    <h1>Upload Note (.html)</h1>\\n    <p>Select the path, drop your <code>.html</code> file, add optional meta, then upload.</p>\\n  </header>\\n\\n  <form class=\\"form upload-form\\" on:submit|preventDefault={upload}>\\n    <!-- Path -->\\n    <fieldset class=\\"block\\">\\n      <legend>Path</legend>\\n      <div class=\\"form-grid\\">\\n        <div class=\\"field\\">\\n          <label for=\\"tcode\\">Tcode</label>\\n          <select id=\\"tcode\\" bind:value={tcode}>\\n            {#if !tcodes.length}\\n              <option value=\\"\\">No subjects registered</option>\\n            {:else}\\n              {#each tcodes as t}\\n                <option value={t.tcodeName}>{t.tcodeName}</option>\\n              {/each}\\n            {/if}\\n          </select>\\n        </div>\\n\\n        <div class=\\"field\\">\\n          <label for=\\"chapterSlug\\">Chapter</label>\\n          <select id=\\"chapterSlug\\" bind:value={chapterSlug} disabled={!tcode || !chapters.length}>\\n            <option value=\\"\\" disabled selected>{tcode ? 'Select chapter' : 'Pick tcode first'}</option>\\n            {#each chapters as ch}\\n              <option value={ch.filename}>Ch {String(ch.number).padStart(2,'0')} — {ch.name}</option>\\n            {/each}\\n          </select>\\n          {#if chapterNo !== null}\\n            <small class=\\"hint\\">Chapter #: <strong>{chapterNo}</strong></small>\\n          {/if}\\n        </div>\\n\\n        <div class=\\"field\\">\\n          <label for=\\"exerciseSlug\\">Exercise</label>\\n          <select id=\\"exerciseSlug\\" bind:value={exerciseSlug} disabled={!chapterSlug || !exercises.length}>\\n            <option value=\\"\\" disabled selected>{chapterSlug ? 'Select exercise' : 'Pick chapter first'}</option>\\n            {#each exercises as ex}\\n              <option value={ex.filename}>{ex.name}</option>\\n            {/each}\\n          </select>\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <!-- Metadata -->\\n    <fieldset class=\\"block\\">\\n      <legend>Metadata</legend>\\n      <div class=\\"form-grid two\\">\\n        <div class=\\"field\\">\\n          <label for=\\"status\\">Status</label>\\n          <input id=\\"status\\" bind:value={status} placeholder=\\"ready | draft | hidden\\" />\\n        </div>\\n        <div class=\\"field\\">\\n          <label for=\\"tags\\">Tags (CSV)</label>\\n          <input id=\\"tags\\" bind:value={tagsCsv} placeholder=\\"geometry, class9\\" />\\n        </div>\\n        <div class=\\"field\\" style=\\"grid-column: 1 / -1;\\">\\n          <label for=\\"description\\">Description</label>\\n          <textarea id=\\"description\\" rows=\\"2\\" bind:value={description}></textarea>\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <!-- Note File -->\\n    <fieldset class=\\"block\\">\\n      <legend>Note File</legend>\\n      <div class=\\"dropgrid\\">\\n        <div\\n          class={\\"dropzone \\" + (dragging ? \\"is-dragging\\" : \\"\\")}\\n          role=\\"button\\" tabindex=\\"0\\"\\n          aria-label=\\"Drop .html here or click to browse\\"\\n          on:click={() => fileEl?.click()}\\n          on:dragover={onDragOver}\\n          on:dragleave={onDragLeave}\\n          on:drop={onDrop}\\n          on:keydown={onDropKey}\\n        >\\n          <div class=\\"dz-icon\\">⇪</div>\\n          <div class=\\"dz-text\\">\\n            {#if file}\\n              <strong>{file.name}</strong>\\n              <small>{Math.round(file.size/1024)} KB</small>\\n            {:else}\\n              <strong>Drop your .html here</strong>\\n              <small>or click to choose</small>\\n            {/if}\\n          </div>\\n          <input\\n            bind:this={fileEl}\\n            id=\\"file\\"\\n            type=\\"file\\"\\n            accept=\\".html,.htm,text/html\\"\\n            on:change={onPick}\\n            class=\\"hidden-input\\"\\n          />\\n        </div>\\n\\n        <div class=\\"sidegrid\\">\\n          <div class=\\"field\\">\\n            <label for=\\"filename\\">Filename (auto)</label>\\n            <input id=\\"filename\\" value={filename} readonly placeholder=\\"auto from file\\" />\\n            <small class=\\"hint\\">Derived from the chosen file (without .html/.htm)</small>\\n          </div>\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <!-- Actions & messages -->\\n    <div class=\\"actions\\">\\n      <button class=\\"primary\\" type=\\"submit\\" disabled={uploading || !canSubmit}>\\n        {uploading ? \\"Uploading…\\" : \\"Upload\\"}\\n      </button>\\n      <button type=\\"button\\" class=\\"btn\\" on:click={resetForm} disabled={uploading}>Clear</button>\\n\\n      {#if msg}<div class=\\"note ok\\">{msg}</div>{/if}\\n      {#if err}<div class=\\"note err\\">{err}</div>{/if}\\n    </div>\\n\\n    <p class=\\"hint\\">Tip: Drag & drop a <code>.html</code> file anywhere inside the dashed area above.</p>\\n  </form>\\n</section>\\n\\n<style>\\n  .wrap {\\n    max-width: 720px;\\n    margin: 0 auto;\\n    padding: 24px 16px;\\n    color: var(--primaryText);\\n  }\\n\\n  .pagehead h1 {\\n    font-size: 1.5rem;\\n    font-weight: 700;\\n    margin: 0 0 .25rem;\\n    color: var(--primaryText);\\n  }\\n  .pagehead p {\\n    margin: 0 0 1rem;\\n    font-size: .95rem;\\n    color: var(--secondaryText);\\n  }\\n  .pagehead code {\\n    background: color-mix(in oklab, var(--accentColor) 14%, var(--surfaceColor));\\n    border: 1px solid var(--borderColor);\\n    border-radius: 6px;\\n    padding: 1px 6px;\\n    color: var(--primaryText);\\n  }\\n\\n  /* Panel tone (forms.css provides the base look) */\\n  .upload-form {\\n    background: var(--surfaceColor);\\n    border-color: var(--borderColor);\\n  }\\n\\n  .block + .block { margin-top: 18px; }\\n  .block > legend {\\n    font-size: .9rem;\\n    letter-spacing: .02em;\\n    color: var(--secondaryText);\\n    margin-bottom: 10px;\\n    padding: 0 4px;\\n  }\\n\\n  /* Grids */\\n  .form-grid { display: grid; gap: 12px; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); }\\n  .form-grid.two { grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); }\\n\\n  /* Dropzone layout */\\n  .dropgrid { display: grid; gap: 14px; grid-template-columns: 1.2fr .8fr; }\\n  @media (max-width: 820px) { .dropgrid { grid-template-columns: 1fr; } }\\n\\n  /* Dropzone (token-only) */\\n  .dropzone {\\n    position: relative;\\n    min-height: 130px;\\n    border: 2px dashed var(--borderColor);\\n    border-radius: 14px;\\n    background:\\n      radial-gradient(1000px 200px at 50% -300px, color-mix(in oklab, var(--accentColor) 10%, transparent), transparent 70%),\\n      linear-gradient(180deg, color-mix(in oklab, var(--accentColor) 6%, var(--surfaceColor)), var(--surfaceColor));\\n    display: flex; align-items: center; gap: 14px; padding: 14px 16px; cursor: pointer;\\n    transition: border-color .15s ease, background .15s ease, box-shadow .15s ease;\\n  }\\n  .dropzone.is-dragging {\\n    border-color: color-mix(in oklab, var(--primaryColor) 55%, var(--borderColor));\\n    box-shadow: 0 0 0 4px color-mix(in oklab, var(--primaryColor) 20%, var(--backgroundColor));\\n    background:\\n      radial-gradient(1000px 200px at 50% -300px, color-mix(in oklab, var(--primaryColor) 18%, transparent), transparent 70%),\\n      linear-gradient(180deg, color-mix(in oklab, var(--primaryColor) 10%, var(--surfaceColor)), var(--surfaceColor));\\n  }\\n\\n  .dz-icon {\\n    font-size: 1.4rem;\\n    width: 2.5rem; height: 2.5rem; line-height: 2.5rem; text-align: center;\\n    border-radius: 12px;\\n    border: 1px solid var(--borderColor);\\n    background: var(--surfaceColor);\\n    color: var(--primaryText);\\n    flex: 0 0 auto;\\n  }\\n  .dz-text { display: flex; flex-direction: column; }\\n  .dz-text strong { font-weight: 700; font-size: .95rem; color: var(--primaryText); }\\n  .dz-text small { color: var(--secondaryText); margin-top: 2px; }\\n\\n  .hidden-input { position: absolute; inset: 0; opacity: 0; pointer-events: none; }\\n\\n  .sidegrid { display: grid; gap: 12px; grid-template-columns: 1fr; }\\n\\n  /* Actions/messages (buttons base from forms.css) */\\n  .actions { display: flex; align-items: center; gap: 10px; margin-top: 6px; flex-wrap: wrap; }\\n\\n  .note { padding: .45rem .6rem; border-radius: .5rem; font-size: .9rem; border: 1px solid transparent; }\\n  .note.ok {\\n    color: var(--primaryText);\\n    background: color-mix(in oklab, var(--secondaryColor) 12%, var(--surfaceColor));\\n    border-color: color-mix(in oklab, var(--secondaryColor) 40%, var(--borderColor));\\n  }\\n  .note.err {\\n    color: var(--primaryText);\\n    background: color-mix(in oklab, var(--accentColor) 14%, var(--surfaceColor));\\n    border-color: color-mix(in oklab, var(--accentColor) 50%, var(--borderColor));\\n  }\\n</style>\\n"],"names":[],"mappings":"AA2PE,iCAAM,CACJ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,KAAK,CAAE,IAAI,aAAa,CAC1B,CAEA,uBAAS,CAAC,gBAAG,CACX,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAClB,KAAK,CAAE,IAAI,aAAa,CAC1B,CACA,uBAAS,CAAC,eAAE,CACV,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAChB,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,IAAI,eAAe,CAC5B,CACA,uBAAS,CAAC,kBAAK,CACb,UAAU,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAC5E,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,CACpC,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,KAAK,CAAE,IAAI,aAAa,CAC1B,CAGA,wCAAa,CACX,UAAU,CAAE,IAAI,cAAc,CAAC,CAC/B,YAAY,CAAE,IAAI,aAAa,CACjC,CAEA,oBAAM,CAAG,oBAAO,CAAE,UAAU,CAAE,IAAM,CACpC,oBAAM,CAAG,oBAAO,CACd,SAAS,CAAE,KAAK,CAChB,cAAc,CAAE,KAAK,CACrB,KAAK,CAAE,IAAI,eAAe,CAAC,CAC3B,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,CAAC,CAAC,GACb,CAGA,sCAAW,CAAE,OAAO,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,CACpG,UAAU,gCAAK,CAAE,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,CAG9E,qCAAU,CAAE,OAAO,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,qBAAqB,CAAE,KAAK,CAAC,IAAM,CACzE,MAAO,YAAY,KAAK,CAAE,CAAE,qCAAU,CAAE,qBAAqB,CAAE,GAAK,CAAE,CAGtE,qCAAU,CACR,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,CACrC,aAAa,CAAE,IAAI,CACnB,UAAU,CACR,gBAAgB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC;AAC5H,MAAM,gBAAgB,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAC/G,OAAO,CAAE,IAAI,CAAE,WAAW,CAAE,MAAM,CAAE,GAAG,CAAE,IAAI,CAAE,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,MAAM,CAAE,OAAO,CAClF,UAAU,CAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAC5E,CACA,SAAS,wCAAa,CACpB,YAAY,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAC9E,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAC1F,UAAU,CACR,gBAAgB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC;AAC7H,MAAM,gBAAgB,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAClH,CAEA,oCAAS,CACP,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,WAAW,CAAE,MAAM,CAAE,UAAU,CAAE,MAAM,CACtE,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,CACpC,UAAU,CAAE,IAAI,cAAc,CAAC,CAC/B,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IACZ,CACA,oCAAS,CAAE,OAAO,CAAE,IAAI,CAAE,cAAc,CAAE,MAAQ,CAClD,sBAAQ,CAAC,oBAAO,CAAE,WAAW,CAAE,GAAG,CAAE,SAAS,CAAE,MAAM,CAAE,KAAK,CAAE,IAAI,aAAa,CAAG,CAClF,sBAAQ,CAAC,mBAAM,CAAE,KAAK,CAAE,IAAI,eAAe,CAAC,CAAE,UAAU,CAAE,GAAK,CAE/D,yCAAc,CAAE,QAAQ,CAAE,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,OAAO,CAAE,CAAC,CAAE,cAAc,CAAE,IAAM,CAEhF,qCAAU,CAAE,OAAO,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,qBAAqB,CAAE,GAAK,CAGlE,oCAAS,CAAE,OAAO,CAAE,IAAI,CAAE,WAAW,CAAE,MAAM,CAAE,GAAG,CAAE,IAAI,CAAE,UAAU,CAAE,GAAG,CAAE,SAAS,CAAE,IAAM,CAE5F,iCAAM,CAAE,OAAO,CAAE,MAAM,CAAC,KAAK,CAAE,aAAa,CAAE,KAAK,CAAE,SAAS,CAAE,KAAK,CAAE,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WAAa,CACtG,KAAK,+BAAI,CACP,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,UAAU,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAC/E,YAAY,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,CACjF,CACA,KAAK,gCAAK,CACR,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,UAAU,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAC5E,YAAY,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,CAC9E"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let canSubmit;
  const tcodes = listTcodes();
  let tcode = tcodes[0]?.tcodeName ?? "";
  let chapters = [];
  let chapterSlug = "";
  let exercises = [];
  let exerciseSlug = "";
  let chapterNo$1 = null;
  let path = {
    tcode: "",
    chapterNo: null,
    exerciseSlug: ""
  };
  let status = "";
  let tagsCsv = "";
  let filename = "";
  $$result.css.add(css);
  chapters = tcode ? getChapters(tcode) : [];
  {
    if (!chapters.find((c) => c.filename === chapterSlug)) chapterSlug = "";
  }
  chapterNo$1 = tcode && chapterSlug ? chapterNo(tcode, chapterSlug) : null;
  exercises = tcode && chapterSlug ? getExercises(tcode, chapterSlug) : [];
  {
    if (!exercises.find((e) => e.filename === exerciseSlug)) exerciseSlug = "";
  }
  path = {
    tcode,
    chapterSlug,
    chapterNo: chapterNo$1,
    exerciseSlug
  };
  canSubmit = !!path.tcode && !!path.chapterNo && !!path.exerciseSlug && false;
  return `${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})} ${validate_component(AdminNav, "AdminNav").$$render($$result, {}, {}, {})} <section class="wrap svelte-w704mx"><header class="pagehead svelte-w704mx" data-svelte-h="svelte-nms23j"><h1 class="svelte-w704mx">Upload Note (.html)</h1> <p class="svelte-w704mx">Select the path, drop your <code class="svelte-w704mx">.html</code> file, add optional meta, then upload.</p></header> <form class="form upload-form svelte-w704mx"> <fieldset class="block svelte-w704mx"><legend class="svelte-w704mx" data-svelte-h="svelte-13kvvn3">Path</legend> <div class="form-grid svelte-w704mx"><div class="field"><label for="tcode" data-svelte-h="svelte-6p13rk">Tcode</label> <select id="tcode">${!tcodes.length ? `<option value="" data-svelte-h="svelte-11m4iz6">No subjects registered</option>` : `${each(tcodes, (t) => {
    return `<option${add_attribute("value", t.tcodeName, 0)}>${escape(t.tcodeName)}</option>`;
  })}`}</select></div> <div class="field"><label for="chapterSlug" data-svelte-h="svelte-nkiq2x">Chapter</label> <select id="chapterSlug" ${!tcode || !chapters.length ? "disabled" : ""}><option value="" disabled selected>${escape(tcode ? "Select chapter" : "Pick tcode first")}</option>${each(chapters, (ch) => {
    return `<option${add_attribute("value", ch.filename, 0)}>Ch ${escape(String(ch.number).padStart(2, "0"))} — ${escape(ch.name)}</option>`;
  })}</select> ${chapterNo$1 !== null ? `<small class="hint">Chapter #: <strong>${escape(chapterNo$1)}</strong></small>` : ``}</div> <div class="field"><label for="exerciseSlug" data-svelte-h="svelte-175yy8x">Exercise</label> <select id="exerciseSlug" ${!chapterSlug || !exercises.length ? "disabled" : ""}><option value="" disabled selected>${escape(chapterSlug ? "Select exercise" : "Pick chapter first")}</option>${each(exercises, (ex) => {
    return `<option${add_attribute("value", ex.filename, 0)}>${escape(ex.name)}</option>`;
  })}</select></div></div></fieldset>  <fieldset class="block svelte-w704mx"><legend class="svelte-w704mx" data-svelte-h="svelte-177nuh5">Metadata</legend> <div class="form-grid two svelte-w704mx"><div class="field"><label for="status" data-svelte-h="svelte-15lfxni">Status</label> <input id="status" placeholder="ready | draft | hidden"${add_attribute("value", status, 0)}></div> <div class="field"><label for="tags" data-svelte-h="svelte-74pu4x">Tags (CSV)</label> <input id="tags" placeholder="geometry, class9"${add_attribute("value", tagsCsv, 0)}></div> <div class="field" style="grid-column: 1 / -1;"><label for="description" data-svelte-h="svelte-1tds9bi">Description</label> <textarea id="description" rows="2">${escape("")}</textarea></div></div></fieldset>  <fieldset class="block svelte-w704mx"><legend class="svelte-w704mx" data-svelte-h="svelte-1o688es">Note File</legend> <div class="dropgrid svelte-w704mx"><div class="${escape(null_to_empty("dropzone "), true) + " svelte-w704mx"}" role="button" tabindex="0" aria-label="Drop .html here or click to browse"><div class="dz-icon svelte-w704mx" data-svelte-h="svelte-j6trfd">⇪</div> <div class="dz-text svelte-w704mx">${`<strong class="svelte-w704mx" data-svelte-h="svelte-jhl2g3">Drop your .html here</strong> <small class="svelte-w704mx" data-svelte-h="svelte-12xg281">or click to choose</small>`}</div> <input id="file" type="file" accept=".html,.htm,text/html" class="hidden-input svelte-w704mx"></div> <div class="sidegrid svelte-w704mx"><div class="field"><label for="filename" data-svelte-h="svelte-1c30r00">Filename (auto)</label> <input id="filename"${add_attribute("value", filename, 0)} readonly placeholder="auto from file"> <small class="hint" data-svelte-h="svelte-5gqm84">Derived from the chosen file (without .html/.htm)</small></div></div></div></fieldset>  <div class="actions svelte-w704mx"><button class="primary" type="submit" ${!canSubmit ? "disabled" : ""}>${escape("Upload")}</button> <button type="button" class="btn" ${""}>Clear</button> ${``} ${``}</div> <p class="hint" data-svelte-h="svelte-hwi9wy">Tip: Drag &amp; drop a <code>.html</code> file anywhere inside the dashed area above.</p></form> </section>`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-D0pApXOO.js.map
