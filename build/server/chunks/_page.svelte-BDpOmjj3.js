import { c as create_ssr_component, v as validate_component, k as createEventDispatcher, d as each, e as escape, h as null_to_empty, f as add_attribute } from './ssr-CO7PFcwR.js';
import { N as Nav } from './Nav--rKTEABU.js';
import './index2-CbmtHu8g.js';
import './ssr2-6RDSickK.js';
import './state.svelte-BCeRBbkS.js';

const css$3 = {
  code: ".tcode-grid.svelte-5xfcud.svelte-5xfcud{display:flex;padding-top:20px;flex-wrap:wrap;gap:var(--space-5);justify-content:center;align-items:flex-start}.tcode-card.svelte-5xfcud.svelte-5xfcud{text-decoration:none;display:flex;flex-direction:column;flex:0 1 320px;min-width:260px;max-width:360px}.tcode-card.svelte-5xfcud.svelte-5xfcud:hover{box-shadow:var(--shadow-2)}.thumb.svelte-5xfcud.svelte-5xfcud{aspect-ratio:16 / 9;border-radius:var(--radius-2);overflow:hidden;background:var(--surface-2);margin-bottom:var(--space-3)}.thumb.svelte-5xfcud img.svelte-5xfcud{width:100%;height:100%;-o-object-fit:cover;object-fit:cover;display:block}.meta.svelte-5xfcud.svelte-5xfcud{display:flex;flex-direction:column;gap:var(--space-2)}.title.svelte-5xfcud.svelte-5xfcud{margin:0;font-size:var(--font-5);color:var(--text)}.desc.svelte-5xfcud.svelte-5xfcud{margin:0;color:var(--muted)}",
  map: '{"version":3,"file":"TcodeCard.svelte","sources":["TcodeCard.svelte"],"sourcesContent":["<script>\\n  export let tcodes = []; // [{ tcodeName, description, image }]\\n  const FALLBACK_IMG = \\"/images/taleem.webp\\";\\n  const hrefFor = (t) => `/syllabus?tcode=${encodeURIComponent(t.tcodeName)}`;\\n<\/script>\\n\\n<div class=\\"tcode-grid\\">\\n  {#each tcodes as t}\\n    <a class=\\"card tcode-card\\" href={hrefFor(t)}>\\n      <div class=\\"thumb\\">\\n        <img src={t.image || FALLBACK_IMG} alt={t.tcodeName} loading=\\"lazy\\" />\\n      </div>\\n\\n      <div class=\\"meta\\">\\n        <h3 class=\\"title\\">{t.tcodeName}</h3>\\n        {#if t.description}<p class=\\"desc\\">{t.description}</p>{/if}\\n      </div>\\n    </a>\\n  {/each}\\n</div>\\n\\n<style>\\n  /* FLEXBOX container: centers, wraps, and avoids full-height rows */\\n  .tcode-grid {\\n    display: flex;\\n    padding-top: 20px;\\n    flex-wrap: wrap;\\n    gap: var(--space-5);\\n    justify-content: center;      /* center the row of cards */\\n    align-items: flex-start;       /* let each card size to its own content */\\n  }\\n\\n  /* Card: consistent, not-too-narrow width with nice wrapping */\\n  .tcode-card {\\n    text-decoration: none;\\n    display: flex;\\n    flex-direction: column;\\n    flex: 0 1 320px;               /* preferred width */\\n    min-width: 260px;              /* prevents super-narrow cards */\\n    max-width: 360px;              /* keeps a tidy max size */\\n  }\\n  .tcode-card:hover { box-shadow: var(--shadow-2); }\\n\\n  /* 16:9 cover thumbnail */\\n  .thumb {\\n    aspect-ratio: 16 / 9;\\n    border-radius: var(--radius-2);\\n    overflow: hidden;\\n    background: var(--surface-2);\\n    margin-bottom: var(--space-3);\\n  }\\n  .thumb img {\\n    width: 100%;\\n    height: 100%;\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n    display: block;\\n  }\\n\\n  /* Text */\\n  .meta { display: flex; flex-direction: column; gap: var(--space-2); }\\n  .title { margin: 0; font-size: var(--font-5); color: var(--text); }\\n  .desc  { margin: 0; color: var(--muted); }\\n</style>\\n"],"names":[],"mappings":"AAuBE,uCAAY,CACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,GAAG,CAAE,IAAI,SAAS,CAAC,CACnB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,UACf,CAGA,uCAAY,CACV,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CACf,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KACb,CACA,uCAAW,MAAO,CAAE,UAAU,CAAE,IAAI,UAAU,CAAG,CAGjD,kCAAO,CACL,YAAY,CAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CACpB,aAAa,CAAE,IAAI,UAAU,CAAC,CAC9B,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,IAAI,WAAW,CAAC,CAC5B,aAAa,CAAE,IAAI,SAAS,CAC9B,CACA,oBAAM,CAAC,iBAAI,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,KAAK,CACjB,UAAU,CAAE,KAAK,CACpB,OAAO,CAAE,KACX,CAGA,iCAAM,CAAE,OAAO,CAAE,IAAI,CAAE,cAAc,CAAE,MAAM,CAAE,GAAG,CAAE,IAAI,SAAS,CAAG,CACpE,kCAAO,CAAE,MAAM,CAAE,CAAC,CAAE,SAAS,CAAE,IAAI,QAAQ,CAAC,CAAE,KAAK,CAAE,IAAI,MAAM,CAAG,CAClE,iCAAO,CAAE,MAAM,CAAE,CAAC,CAAE,KAAK,CAAE,IAAI,OAAO,CAAG"}'
};
const FALLBACK_IMG = "/images/taleem.webp";
const TcodeCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { tcodes = [] } = $$props;
  const hrefFor = (t) => `/syllabus?tcode=${encodeURIComponent(t.tcodeName)}`;
  if ($$props.tcodes === void 0 && $$bindings.tcodes && tcodes !== void 0) $$bindings.tcodes(tcodes);
  $$result.css.add(css$3);
  return `<div class="tcode-grid svelte-5xfcud">${each(tcodes, (t) => {
    return `<a class="card tcode-card svelte-5xfcud"${add_attribute("href", hrefFor(t), 0)}><div class="thumb svelte-5xfcud"><img${add_attribute("src", t.image || FALLBACK_IMG, 0)}${add_attribute("alt", t.tcodeName, 0)} loading="lazy" class="svelte-5xfcud"></div> <div class="meta svelte-5xfcud"><h3 class="title svelte-5xfcud">${escape(t.tcodeName)}</h3> ${t.description ? `<p class="desc svelte-5xfcud">${escape(t.description)}</p>` : ``}</div> </a>`;
  })} </div>`;
});
const css$2 = {
  code: ".question-grid.svelte-l73yir{display:flex;flex-wrap:wrap;justify-content:center;gap:1rem;padding:0.5rem;width:100%}.card.svelte-l73yir{display:flex;flex-direction:column;border-radius:0.75rem;overflow:hidden;border:2px solid var(--c);box-shadow:0 8px 8px rgba(45, 44, 44, 0.8);transition:transform 120ms ease, box-shadow 120ms ease;text-decoration:none}.card.svelte-l73yir:hover{transform:translateY(2px);box-shadow:0 10px 10px rgba(21, 42, 0, 0.9)}.thumb.svelte-l73yir{display:block;width:100%;height:160px;-o-object-fit:cover;object-fit:cover;background-color:#f0f0f0}.title.svelte-l73yir{margin-top:auto;color:#d5bd9b;background:var(--c);padding:0.45rem 0.6rem;font-size:0.95rem;display:flex;align-items:center;gap:0.4rem}.icon.svelte-l73yir{font-size:1.15rem;line-height:1}.name.svelte-l73yir{font-size:1rem}.no-questions.svelte-l73yir{color:#331f04;font-size:1rem;text-align:center}",
  map: '{"version":3,"file":"QCard.svelte","sources":["QCard.svelte"],"sourcesContent":["<script>\\n    export let questions = [];\\n  \\n    const FALLBACKS = {\\n      slide: \\"/images/slide.webp\\",\\n      note:  \\"/images/beakers2.webp\\",\\n      deck:  \\"/images/slide.webp\\"\\n    };\\n  \\n    function getThumb(q) {\\n      return q.thumbnail ?? FALLBACKS[q.type] ?? \\"/images/slide.webp\\";\\n    }\\n  \\n    function getMeta(q) {\\n      if (q.type === \\"slide\\") return { color: \\"#492d08\\", icon: \\"📷\\" };\\n      if (q.type === \\"note\\")  return { color: \\"#6c430b\\", icon: \\"📚\\" };\\n      if (q.type === \\"deck\\")  return { color: \\"#0c0535\\", icon: \\"📽️\\" };\\n      return { color: \\"#2E1C02\\", icon: \\"\\" };\\n    }\\n  \\n    const hrefFor = (q) =>\\n      q.type === \\"note\\" ? `/notes/${q.filename}` : `/player?filename=${q.filename}`;\\n  <\/script>\\n  \\n  <div class=\\"question-grid\\">\\n    {#if questions.length > 0}\\n      {#each questions as q (q.filename)}\\n        {@const meta = getMeta(q)}\\n        <a class=\\"card\\" href={hrefFor(q)} style={\\"--c:\\" + meta.color}>\\n          <img class=\\"thumb\\" src={getThumb(q)} alt={q.name} loading=\\"lazy\\" />\\n          <div class=\\"title\\">\\n            <span class=\\"icon\\">{meta.icon}</span>\\n            <span class=\\"name\\">{q.name}</span>\\n          </div>\\n        </a>\\n      {/each}\\n    {:else}\\n      <p class=\\"no-questions\\">No questions available for this selection.</p>\\n    {/if}\\n  </div>\\n  \\n  <style>\\n    .question-grid {\\n      display: flex;\\n      flex-wrap: wrap;\\n      justify-content: center;\\n      gap: 1rem;\\n      padding: 0.5rem; /* trimmed */\\n      width: 100%;\\n    }\\n  \\n    .card {\\n      display: flex;\\n      flex-direction: column;\\n      border-radius: 0.75rem;\\n      overflow: hidden;\\n      border: 2px solid var(--c); /* slimmer border */\\n      box-shadow: 0 8px 8px rgba(45, 44, 44, 0.8);\\n      transition: transform 120ms ease, box-shadow 120ms ease;\\n      text-decoration: none;\\n    }\\n  \\n    .card:hover {\\n      transform: translateY(2px);\\n      box-shadow: 0 10px 10px rgba(21, 42, 0, 0.9);\\n    }\\n  \\n    .thumb {\\n      display: block;\\n      width: 100%;\\n      height: 160px;\\n      -o-object-fit: cover;\\n         object-fit: cover;\\n      background-color: #f0f0f0;\\n      /* no extra radius needed; parent overflow handles corners */\\n    }\\n  \\n    .title {\\n      margin-top: auto;\\n      color: #d5bd9b;\\n      background: var(--c);\\n      padding: 0.45rem 0.6rem; /* tighter */\\n      font-size: 0.95rem;\\n      display: flex;\\n      align-items: center;\\n      gap: 0.4rem;\\n    }\\n  \\n    .icon { font-size: 1.15rem; line-height: 1; }\\n    .name { font-size: 1rem; }\\n  \\n    .no-questions {\\n      color: #331f04;\\n      font-size: 1rem;\\n      text-align: center;\\n    }\\n  </style>\\n  "],"names":[],"mappings":"AA0CI,4BAAe,CACb,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,MAAM,CACvB,GAAG,CAAE,IAAI,CACT,OAAO,CAAE,MAAM,CACf,KAAK,CAAE,IACT,CAEA,mBAAM,CACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,aAAa,CAAE,OAAO,CACtB,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAC1B,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAC3C,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CACvD,eAAe,CAAE,IACnB,CAEA,mBAAK,MAAO,CACV,SAAS,CAAE,WAAW,GAAG,CAAC,CAC1B,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC7C,CAEA,oBAAO,CACL,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,KAAK,CACjB,UAAU,CAAE,KAAK,CACpB,gBAAgB,CAAE,OAEpB,CAEA,oBAAO,CACL,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,IAAI,GAAG,CAAC,CACpB,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,SAAS,CAAE,OAAO,CAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MACP,CAEA,mBAAM,CAAE,SAAS,CAAE,OAAO,CAAE,WAAW,CAAE,CAAG,CAC5C,mBAAM,CAAE,SAAS,CAAE,IAAM,CAEzB,2BAAc,CACZ,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MACd"}'
};
function getMeta(q) {
  if (q.type === "slide") return { color: "#492d08", icon: "📷" };
  if (q.type === "note") return { color: "#6c430b", icon: "📚" };
  if (q.type === "deck") return { color: "#0c0535", icon: "📽️" };
  return { color: "#2E1C02", icon: "" };
}
const QCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { questions = [] } = $$props;
  const FALLBACKS = {
    slide: "/images/slide.webp",
    note: "/images/beakers2.webp",
    deck: "/images/slide.webp"
  };
  function getThumb(q) {
    return q.thumbnail ?? FALLBACKS[q.type] ?? "/images/slide.webp";
  }
  const hrefFor = (q) => q.type === "note" ? `/notes/${q.filename}` : `/player?filename=${q.filename}`;
  if ($$props.questions === void 0 && $$bindings.questions && questions !== void 0) $$bindings.questions(questions);
  $$result.css.add(css$2);
  return `<div class="question-grid svelte-l73yir">${questions.length > 0 ? `${each(questions, (q) => {
    let meta = getMeta(q);
    return ` <a class="card svelte-l73yir"${add_attribute("href", hrefFor(q), 0)}${add_attribute("style", "--c:" + meta.color, 0)}><img class="thumb svelte-l73yir"${add_attribute("src", getThumb(q), 0)}${add_attribute("alt", q.name, 0)} loading="lazy"> <div class="title svelte-l73yir"><span class="icon svelte-l73yir">${escape(meta.icon)}</span> <span class="name svelte-l73yir">${escape(q.name)}</span></div> </a>`;
  })}` : `<p class="no-questions svelte-l73yir" data-svelte-h="svelte-pjfwhw">No questions available for this selection.</p>`} </div>`;
});
const HomeIndex = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let questions = [];
  return `<div class="app-container"><div class="layout-container"><div class="main-content"> <div class="questions-container"> ${questions.length ? `${validate_component(QCard, "QCard").$$render($$result, { questions }, {}, {})}` : `<p data-svelte-h="svelte-cr9qbe">Loading…</p>`}</div></div></div></div>`;
});
const css$1 = {
  code: ".secnav.svelte-11g9ipn.svelte-11g9ipn{padding:var(--space-3) var(--space-4);background:transparent}.row.svelte-11g9ipn.svelte-11g9ipn{display:flex;gap:var(--space-2);flex-wrap:wrap}.jc-start.svelte-11g9ipn.svelte-11g9ipn{justify-content:flex-start}.jc-center.svelte-11g9ipn.svelte-11g9ipn{justify-content:center}.jc-end.svelte-11g9ipn.svelte-11g9ipn{justify-content:flex-end}.chip.svelte-11g9ipn.svelte-11g9ipn{display:inline-flex;align-items:center;gap:var(--space-2);padding:6px 10px;border:1px solid var(--border);border-radius:999px;background:rgba(196,167,127,0.08);color:var(--text);cursor:pointer;line-height:1;transition:border-color .15s ease, background .15s ease, transform .12s ease}.chip.svelte-11g9ipn.svelte-11g9ipn:hover{border-color:var(--accent);transform:translateY(-1px)}.chip.svelte-11g9ipn.svelte-11g9ipn:active{transform:translateY(0)}.chip.svelte-11g9ipn.svelte-11g9ipn:focus-visible{outline:2px solid var(--brand);outline-offset:2px}.chip.is-active.svelte-11g9ipn.svelte-11g9ipn{background:var(--brand);border-color:var(--brand);color:#fff;box-shadow:var(--shadow-1)}.dot.svelte-11g9ipn.svelte-11g9ipn{width:6px;height:6px;border-radius:999px;background:currentColor;opacity:.6}.chip.is-active.svelte-11g9ipn .dot.svelte-11g9ipn{background:#fff;opacity:1}.label.svelte-11g9ipn.svelte-11g9ipn{font-weight:600;letter-spacing:.2px}",
  map: `{"version":3,"file":"SecondaryNav.svelte","sources":["SecondaryNav.svelte"],"sourcesContent":["<!-- src/lib/SecondaryNav.svelte -->\\n<script>\\n  import { createEventDispatcher } from 'svelte';\\n\\n  export let items = [];            // string[]\\n  export let pageDisplayState = 0;  // two-way bound from parent\\n  export let align = 'left';        // 'left' | 'center' | 'right'\\n\\n  const dispatch = createEventDispatcher();\\n\\n  function select(i) {\\n    pageDisplayState = i; // updates parent via bind:pageDisplayState\\n    dispatch('select', { index: i, ordinal: i + 1, label: items[i] });\\n  }\\n\\n  $: jClass = align === 'center' ? 'jc-center' : align === 'right' ? 'jc-end' : 'jc-start';\\n<\/script>\\n\\n<nav class=\\"secnav\\" aria-label=\\"Section navigation\\">\\n  <div class={\\"row \\" + jClass}>\\n    {#each items as label, i}\\n      <button\\n        type=\\"button\\"\\n        class={\\"chip \\" + (pageDisplayState === i ? 'is-active' : '')}\\n        aria-current={pageDisplayState === i ? 'page' : undefined}\\n        on:click={() => select(i)}\\n      >\\n        <span class=\\"dot\\" aria-hidden=\\"true\\"></span>\\n        <span class=\\"label\\">{label}</span>\\n      </button>\\n    {/each}\\n  </div>\\n</nav>\\n\\n<style>\\n  /* Container */\\n  .secnav { padding: var(--space-3) var(--space-4); background: transparent; }\\n  .row { display: flex; gap: var(--space-2); flex-wrap: wrap; }\\n  .jc-start  { justify-content: flex-start; }\\n  .jc-center { justify-content: center; }\\n  .jc-end    { justify-content: flex-end; }\\n\\n  /* Chip button */\\n  .chip {\\n    display: inline-flex; align-items: center; gap: var(--space-2);\\n    padding: 6px 10px;\\n    border: 1px solid var(--border);\\n    border-radius: 999px;\\n    background: rgba(196,167,127,0.08); /* sand tint */\\n    color: var(--text);\\n    cursor: pointer;\\n    line-height: 1;\\n    transition: border-color .15s ease, background .15s ease, transform .12s ease;\\n  }\\n  .chip:hover { border-color: var(--accent); transform: translateY(-1px); }\\n  .chip:active { transform: translateY(0); }\\n  .chip:focus-visible { outline: 2px solid var(--brand); outline-offset: 2px; }\\n\\n  /* Active state */\\n  .chip.is-active {\\n    background: var(--brand);\\n    border-color: var(--brand);\\n    color: #fff;\\n    box-shadow: var(--shadow-1);\\n  }\\n\\n  /* Little status dot */\\n  .dot { width: 6px; height: 6px; border-radius: 999px; background: currentColor; opacity: .6; }\\n  .chip.is-active .dot { background: #fff; opacity: 1; }\\n\\n  .label { font-weight: 600; letter-spacing: .2px; }\\n</style>\\n"],"names":[],"mappings":"AAoCE,qCAAQ,CAAE,OAAO,CAAE,IAAI,SAAS,CAAC,CAAC,IAAI,SAAS,CAAC,CAAE,UAAU,CAAE,WAAa,CAC3E,kCAAK,CAAE,OAAO,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,SAAS,CAAC,CAAE,SAAS,CAAE,IAAM,CAC5D,uCAAW,CAAE,eAAe,CAAE,UAAY,CAC1C,wCAAW,CAAE,eAAe,CAAE,MAAQ,CACtC,qCAAW,CAAE,eAAe,CAAE,QAAU,CAGxC,mCAAM,CACJ,OAAO,CAAE,WAAW,CAAE,WAAW,CAAE,MAAM,CAAE,GAAG,CAAE,IAAI,SAAS,CAAC,CAC9D,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,CAC/B,aAAa,CAAE,KAAK,CACpB,UAAU,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAClC,KAAK,CAAE,IAAI,MAAM,CAAC,CAClB,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,CAAC,CACd,UAAU,CAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,IAC3E,CACA,mCAAK,MAAO,CAAE,YAAY,CAAE,IAAI,QAAQ,CAAC,CAAE,SAAS,CAAE,WAAW,IAAI,CAAG,CACxE,mCAAK,OAAQ,CAAE,SAAS,CAAE,WAAW,CAAC,CAAG,CACzC,mCAAK,cAAe,CAAE,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAE,cAAc,CAAE,GAAK,CAG5E,KAAK,wCAAW,CACd,UAAU,CAAE,IAAI,OAAO,CAAC,CACxB,YAAY,CAAE,IAAI,OAAO,CAAC,CAC1B,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,UAAU,CAC5B,CAGA,kCAAK,CAAE,KAAK,CAAE,GAAG,CAAE,MAAM,CAAE,GAAG,CAAE,aAAa,CAAE,KAAK,CAAE,UAAU,CAAE,YAAY,CAAE,OAAO,CAAE,EAAI,CAC7F,KAAK,yBAAU,CAAC,mBAAK,CAAE,UAAU,CAAE,IAAI,CAAE,OAAO,CAAE,CAAG,CAErD,oCAAO,CAAE,WAAW,CAAE,GAAG,CAAE,cAAc,CAAE,IAAM"}`
};
const SecondaryNav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let jClass;
  let { items = [] } = $$props;
  let { pageDisplayState = 0 } = $$props;
  let { align = "left" } = $$props;
  createEventDispatcher();
  if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
  if ($$props.pageDisplayState === void 0 && $$bindings.pageDisplayState && pageDisplayState !== void 0) $$bindings.pageDisplayState(pageDisplayState);
  if ($$props.align === void 0 && $$bindings.align && align !== void 0) $$bindings.align(align);
  $$result.css.add(css$1);
  jClass = align === "center" ? "jc-center" : align === "right" ? "jc-end" : "jc-start";
  return `  <nav class="secnav svelte-11g9ipn" aria-label="Section navigation"><div class="${escape(null_to_empty("row " + jClass), true) + " svelte-11g9ipn"}">${each(items, (label, i) => {
    return `<button type="button" class="${escape(null_to_empty("chip " + (pageDisplayState === i ? "is-active" : "")), true) + " svelte-11g9ipn"}"${add_attribute("aria-current", pageDisplayState === i ? "page" : void 0, 0)}><span class="dot svelte-11g9ipn" aria-hidden="true"></span> <span class="label svelte-11g9ipn">${escape(label)}</span> </button>`;
  })}</div> </nav>`;
});
const css = {
  code: ".main-section.svelte-9j7qvg{width:100%;min-height:100vh;border-radius:20px}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<!-- src/routes/+page.svelte -->\\n<script>\\n  import { onMount } from \\"svelte\\";\\n  import Nav from \\"$lib/appComps/Nav.svelte\\";\\n  import Sidebar from \\"$lib/appComps/homepage/Sidebar.svelte\\";\\n  import TcodeCard from \\"$lib/homeIndex/TcodeCard.svelte\\";\\n  import HomeIndex from \\"$lib/homeIndex/HomeIndex.svelte\\";\\n  import SecondaryNav from \\"$lib/SecondaryNav.svelte\\";\\n \\n  import { listTcodes } from \\"../lib/services/synopsisServices\\";\\n\\n  let syllabus = [];\\n  onMount(() => {\\n\\n    syllabus = listTcodes(); // [{ tcodeName, description, image }]\\n  });\\n\\n  let pageDisplayState = 0;\\n<\/script>\\n\\n\\n<Nav />\\n<div class=\\"page\\">\\n\\n  <div >\\n    <SecondaryNav\\n      items={[\\"Videos\\" , \\"Courses\\"]}\\n      bind:pageDisplayState={pageDisplayState}\\n    />\\n  </div>\\n\\n  <section class=\\"main-section\\">\\n    {#if pageDisplayState == 0}\\n    <HomeIndex />\\n    <br>\\n    <br>\\n    {:else if pageDisplayState == 1}\\n    <TcodeCard tcodes={syllabus} />\\n    {/if}\\n\\n    <!-- // DO NOT DELETE -->\\n    <!-- <Sidebar /> -->\\n  </section>\\n\\n</div>\\n\\n\\n<style>\\n  .main-section {\\n    width: 100%;\\n    /* background-color: #C1B294; */\\n    min-height: 100vh;\\n    border-radius: 20px;\\n  }\\n</style>"],"names":[],"mappings":"AAgDE,2BAAc,CACZ,KAAK,CAAE,IAAI,CAEX,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,IACjB"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let syllabus = [];
  let pageDisplayState = 0;
  $$result.css.add(css);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    $$rendered = `  ${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})} <div class="page"><div>${validate_component(SecondaryNav, "SecondaryNav").$$render(
      $$result,
      {
        items: ["Videos", "Courses"],
        pageDisplayState
      },
      {
        pageDisplayState: ($$value) => {
          pageDisplayState = $$value;
          $$settled = false;
        }
      },
      {}
    )}</div> <section class="main-section svelte-9j7qvg">${pageDisplayState == 0 ? `${validate_component(HomeIndex, "HomeIndex").$$render($$result, {}, {}, {})} <br> <br>` : `${pageDisplayState == 1 ? `${validate_component(TcodeCard, "TcodeCard").$$render($$result, { tcodes: syllabus }, {}, {})}` : ``}`}  </section> </div>`;
  } while (!$$settled);
  return $$rendered;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-BDpOmjj3.js.map
