import { c as create_ssr_component, v as validate_component, d as each, e as escape, f as add_attribute, h as null_to_empty } from './ssr-CO7PFcwR.js';
import { N as Nav } from './Nav-CIe9NOWg.js';
import { A as AdminNav } from './AdminNav-DPQi_ewN.js';
import { l as listTcodes, g as getChapters, c as chapterNo, a as getExercises } from './synopsisServices-C-26dl2-.js';
import './ssr2-6RDSickK.js';
import './state.svelte-BCeRBbkS.js';
import './index2-CbmtHu8g.js';

const css = {
  code: ".wrap.svelte-1lc9vvt.svelte-1lc9vvt{max-width:720px;margin:0 auto;padding:24px 16px;color:var(--primaryText)}.pagehead.svelte-1lc9vvt h1.svelte-1lc9vvt{font-size:1.5rem;font-weight:700;margin:0 0 .25rem;color:var(--primaryText)}.pagehead.svelte-1lc9vvt p.svelte-1lc9vvt{margin:0 0 1rem;font-size:.95rem;color:var(--secondaryText)}.pagehead.svelte-1lc9vvt code.svelte-1lc9vvt{background:color-mix(in oklab, var(--accentColor) 14%, var(--surfaceColor));border:1px solid var(--borderColor);border-radius:6px;padding:1px 6px;color:var(--primaryText)}.upload-form.svelte-1lc9vvt.svelte-1lc9vvt{background:var(--surfaceColor);border-color:var(--borderColor)}.block.svelte-1lc9vvt+.block.svelte-1lc9vvt{margin-top:18px}.block.svelte-1lc9vvt>legend.svelte-1lc9vvt{font-size:.9rem;letter-spacing:.02em;color:var(--secondaryText);margin-bottom:10px;padding:0 4px}.form-grid.svelte-1lc9vvt.svelte-1lc9vvt{display:grid;gap:12px;grid-template-columns:repeat(auto-fit, minmax(200px, 1fr))}.form-grid.two.svelte-1lc9vvt.svelte-1lc9vvt{grid-template-columns:repeat(auto-fit, minmax(260px, 1fr))}.dropgrid.svelte-1lc9vvt.svelte-1lc9vvt{display:grid;gap:14px;grid-template-columns:1.2fr .8fr}@media(max-width: 820px){.dropgrid.svelte-1lc9vvt.svelte-1lc9vvt{grid-template-columns:1fr}}.dropzone.svelte-1lc9vvt.svelte-1lc9vvt{position:relative;min-height:130px;border:2px dashed var(--borderColor);border-radius:14px;background:radial-gradient(1000px 200px at 50% -300px, color-mix(in oklab, var(--accentColor) 10%, transparent), transparent 70%),\n      linear-gradient(180deg, color-mix(in oklab, var(--accentColor) 6%, var(--surfaceColor)), var(--surfaceColor));display:flex;align-items:center;gap:14px;padding:14px 16px;cursor:pointer;transition:border-color .15s ease, background .15s ease, box-shadow .15s ease}.dropzone.is-dragging.svelte-1lc9vvt.svelte-1lc9vvt{border-color:color-mix(in oklab, var(--primaryColor) 55%, var(--borderColor));box-shadow:0 0 0 4px color-mix(in oklab, var(--primaryColor) 20%, var(--backgroundColor));background:radial-gradient(1000px 200px at 50% -300px, color-mix(in oklab, var(--primaryColor) 18%, transparent), transparent 70%),\n      linear-gradient(180deg, color-mix(in oklab, var(--primaryColor) 10%, var(--surfaceColor)), var(--surfaceColor))}.dz-icon.svelte-1lc9vvt.svelte-1lc9vvt{font-size:1.4rem;width:2.5rem;height:2.5rem;line-height:2.5rem;text-align:center;border-radius:12px;border:1px solid var(--borderColor);background:var(--surfaceColor);color:var(--primaryText);flex:0 0 auto}.dz-text.svelte-1lc9vvt.svelte-1lc9vvt{display:flex;flex-direction:column}.dz-text.svelte-1lc9vvt strong.svelte-1lc9vvt{font-weight:700;font-size:.95rem;color:var(--primaryText)}.dz-text.svelte-1lc9vvt small.svelte-1lc9vvt{color:var(--secondaryText);margin-top:2px}.hidden-input.svelte-1lc9vvt.svelte-1lc9vvt{position:absolute;inset:0;opacity:0;pointer-events:none}.sidegrid.svelte-1lc9vvt.svelte-1lc9vvt{display:grid;gap:12px;grid-template-columns:1fr}.actions.svelte-1lc9vvt.svelte-1lc9vvt{display:flex;align-items:center;gap:10px;margin-top:6px;flex-wrap:wrap}.note.svelte-1lc9vvt.svelte-1lc9vvt{padding:.45rem .6rem;border-radius:.5rem;font-size:.9rem;border:1px solid transparent}.note.ok.svelte-1lc9vvt.svelte-1lc9vvt{color:var(--primaryText);background:color-mix(in oklab, var(--secondaryColor) 12%, var(--surfaceColor));border-color:color-mix(in oklab, var(--secondaryColor) 40%, var(--borderColor))}.note.err.svelte-1lc9vvt.svelte-1lc9vvt{color:var(--primaryText);background:color-mix(in oklab, var(--accentColor) 14%, var(--surfaceColor));border-color:color-mix(in oklab, var(--accentColor) 50%, var(--borderColor))}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import Nav from \\"$lib/appComps/Nav.svelte\\";\\n  import AdminNav from \\"$lib/AdminNav.svelte\\";\\n  import '$lib/styles/forms.css'; // ✅ shared, theme-aware form styles\\n\\n  import {\\n    listTcodes,\\n    getChapters,\\n    getExercises,\\n    chapterNo as chapterNoOf\\n  } from \\"$lib/services/synopsisServices.js\\";\\n\\n  // data sources (client-safe)\\n  const tcodes = listTcodes(); // [{ tcodeName, description, image }]\\n\\n  // path state (cascading)\\n  let tcode = tcodes[0]?.tcodeName ?? '';\\n  let chapters = [];\\n  let chapterSlug = '';\\n  let chapterNumber = null;\\n  let exercises = [];\\n  let exerciseSlug = '';\\n\\n  // file & meta\\n  let file = null;\\n  let filename = '';\\n  let description = '';\\n  let tagsCsv = '';\\n  let status = '';\\n\\n  // ui\\n  let loading = false;\\n  let msg = '';\\n  let err = '';\\n  let dragging = false;\\n\\n  const STATUS = ['draft', 'ready', 'published', 'archived'];\\n\\n  // —— helpers ——\\n  function toSafeName(name) {\\n    return (name || '')\\n      .replace(/\\\\.json$/i, '')\\n      .trim()\\n      .toLowerCase()\\n      .replace(/[^a-z0-9_-]+/g, '-')\\n      .replace(/-+/g, '-')\\n      .replace(/^-|-$/g, '');\\n  }\\n\\n  function pickFile(e) {\\n    const f = e.target?.files?.[0] ?? null;\\n    file = f;\\n    filename = f ? toSafeName(f.name) : '';\\n  }\\n  function onDrop(e) {\\n    e.preventDefault();\\n    dragging = false;\\n    const f = e.dataTransfer?.files?.[0] ?? null;\\n    file = f;\\n    filename = f ? toSafeName(f.name) : '';\\n  }\\n  function onDragOver(e) { e.preventDefault(); dragging = true; }\\n  function onDragLeave() { dragging = false; }\\n\\n  // —— cascading reactivity ——\\n  $: chapters = tcode ? getChapters(tcode) : [];\\n  $: if (!chapters.find(c => c.filename === chapterSlug)) chapterSlug = ''; // reset if tcode changed\\n\\n  $: chapterNumber = (tcode && chapterSlug) ? chapterNoOf(tcode, chapterSlug) : null;\\n\\n  $: exercises = (tcode && chapterSlug) ? getExercises(tcode, chapterSlug) : [];\\n  $: if (!exercises.find(e => e.filename === exerciseSlug)) exerciseSlug = ''; // reset if chapter changed\\n\\n  // submit enabled?\\n  $: canSubmit = !!tcode && !!chapterNumber && !!exerciseSlug && !!file;\\n\\n  async function upload() {\\n    err = ''; msg = '';\\n    if (!canSubmit) { err = 'Please fill required fields.'; return; }\\n\\n    loading = true;\\n    try {\\n      const fd = new FormData();\\n      fd.append('tcode', tcode);\\n      fd.append('chapter', String(chapterNumber));   // number from synopsis\\n      fd.append('exercise', exerciseSlug);          // exercise filename (slug)\\n      fd.append('file', file);\\n      fd.append('filename', toSafeName(filename || file.name));\\n      if (description) fd.append('description', description);\\n      if (tagsCsv) fd.append('tags', tagsCsv);\\n      if (status) fd.append('status', status);\\n\\n      const res = await fetch('/admin/upload_json', { method: 'POST', body: fd });\\n      const data = await res.json();\\n      if (!res.ok) throw new Error(data?.error || 'Upload failed');\\n\\n      msg = \`Uploaded ✓ (\${data.filename})\`;\\n      file = null;\\n      filename = '';\\n      (document.getElementById('file') || {}).value = '';\\n    } catch (e) {\\n      err = e.message || 'Error';\\n    } finally {\\n      loading = false;\\n    }\\n  }\\n<\/script>\\n\\n<Nav />\\n<AdminNav />\\n\\n<section class=\\"wrap\\">\\n  <header class=\\"pagehead\\">\\n    <h1>Upload JSON Deck</h1>\\n    <p>Pick the path, drop your <code>.json</code>, add optional meta, then upload.</p>\\n  </header>\\n\\n  <form\\n    class=\\"form upload-form\\"\\n    on:drop={onDrop}\\n    on:dragover={onDragOver}\\n    on:dragleave={onDragLeave}\\n  >\\n    <!-- Path (cascading) -->\\n    <fieldset class=\\"block\\">\\n      <legend>Path</legend>\\n      <div class=\\"form-grid\\">\\n        <!-- Tcode -->\\n        <div class=\\"field\\">\\n          <label for=\\"tcode\\">Tcode</label>\\n          <select id=\\"tcode\\" bind:value={tcode}>\\n            {#if !tcodes.length}\\n              <option value=\\"\\">No subjects registered</option>\\n            {:else}\\n              {#each tcodes as t}\\n                <option value={t.tcodeName}>{t.tcodeName}</option>\\n              {/each}\\n            {/if}\\n          </select>\\n        </div>\\n\\n        <!-- Chapter (slug) -->\\n        <div class=\\"field\\">\\n          <label for=\\"chapter\\">Chapter</label>\\n          <select id=\\"chapter\\" bind:value={chapterSlug} disabled={!tcode || !chapters.length}>\\n            <option value=\\"\\" disabled selected>{tcode ? 'Select chapter' : 'Pick tcode first'}</option>\\n            {#each chapters as ch}\\n              <option value={ch.filename}>\\n                Ch {String(ch.number).padStart(2,'0')} — {ch.name}\\n              </option>\\n            {/each}\\n          </select>\\n          {#if chapterNumber !== null}\\n            <small class=\\"hint\\">Chapter #: <strong>{chapterNumber}</strong></small>\\n          {/if}\\n        </div>\\n\\n        <!-- Exercise (slug) -->\\n        <div class=\\"field\\">\\n          <label for=\\"exercise\\">Exercise</label>\\n          <select id=\\"exercise\\" bind:value={exerciseSlug} disabled={!chapterSlug || !exercises.length}>\\n            <option value=\\"\\" disabled selected>\\n              {chapterSlug ? 'Select exercise' : 'Pick chapter first'}\\n            </option>\\n            {#each exercises as ex}\\n              <option value={ex.filename}>{ex.name}</option>\\n            {/each}\\n          </select>\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <!-- File -->\\n    <fieldset class=\\"block\\">\\n      <legend>File</legend>\\n\\n      <div class=\\"dropgrid\\">\\n        <div\\n          class={\\"dropzone \\" + (dragging ? \\"is-dragging\\" : \\"\\")}\\n          role=\\"button\\" tabindex=\\"0\\"\\n          aria-label=\\"Drop JSON here or click to browse\\"\\n          on:click={() => document.getElementById('file')?.click()}\\n        >\\n          <div class=\\"dz-icon\\">⇪</div>\\n          <div class=\\"dz-text\\">\\n            {#if file}\\n              <strong>{file.name}</strong>\\n              <small>{Math.round(file.size/1024)} KB</small>\\n            {:else}\\n              <strong>Drop your .json here</strong>\\n              <small>or click to choose</small>\\n            {/if}\\n          </div>\\n          <input\\n            id=\\"file\\"\\n            type=\\"file\\"\\n            accept=\\"application/json,.json\\"\\n            on:change={pickFile}\\n            class=\\"hidden-input\\"\\n          />\\n        </div>\\n\\n        <div class=\\"sidegrid\\">\\n          <div class=\\"field\\">\\n            <label for=\\"filename\\">Filename (auto)</label>\\n            <input id=\\"filename\\" bind:value={filename} placeholder=\\"auto from file\\" />\\n          </div>\\n          <div class=\\"field\\">\\n            <label for=\\"status\\">Status</label>\\n            <select id=\\"status\\" bind:value={status}>\\n              <option value=\\"\\">(auto)</option>\\n              {#each STATUS as s}\\n                <option value={s}>{s}</option>\\n              {/each}\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <!-- Meta -->\\n    <fieldset class=\\"block\\">\\n      <legend>Meta</legend>\\n      <div class=\\"form-grid two\\">\\n        <div class=\\"field\\">\\n          <label for=\\"description\\">Description</label>\\n          <input id=\\"description\\" bind:value={description} placeholder=\\"optional\\" />\\n        </div>\\n        <div class=\\"field\\">\\n          <label for=\\"tags\\">Tags (csv)</label>\\n          <input id=\\"tags\\" bind:value={tagsCsv} placeholder=\\"algebra, basics\\" />\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <!-- Actions -->\\n    <div class=\\"actions\\">\\n      <button on:click|preventDefault={upload} disabled={loading || !canSubmit} class=\\"primary\\">\\n        {loading ? 'Uploading…' : 'Upload JSON'}\\n      </button>\\n\\n      {#if msg}<div class=\\"note ok\\">{msg}</div>{/if}\\n      {#if err}<div class=\\"note err\\">{err}</div>{/if}\\n    </div>\\n\\n    <p class=\\"hint\\">Tip: Drag & drop a <code>.json</code> file anywhere inside the dashed area above.</p>\\n  </form>\\n</section>\\n\\n<style>\\n  .wrap {\\n    max-width: 720px;\\n    margin: 0 auto;\\n    padding: 24px 16px;\\n    color: var(--primaryText);\\n  }\\n\\n  .pagehead h1 {\\n    font-size: 1.5rem;\\n    font-weight: 700;\\n    margin: 0 0 .25rem;\\n    color: var(--primaryText);\\n  }\\n  .pagehead p {\\n    margin: 0 0 1rem;\\n    font-size: .95rem;\\n    color: var(--secondaryText);\\n  }\\n  .pagehead code {\\n    background: color-mix(in oklab, var(--accentColor) 14%, var(--surfaceColor));\\n    border: 1px solid var(--borderColor);\\n    border-radius: 6px;\\n    padding: 1px 6px;\\n    color: var(--primaryText);\\n  }\\n\\n  /* Panel tone (forms.css handles base look) */\\n  .upload-form {\\n    background: var(--surfaceColor);\\n    border-color: var(--borderColor);\\n  }\\n\\n  .block + .block { margin-top: 18px; }\\n  .block > legend {\\n    font-size: .9rem;\\n    letter-spacing: .02em;\\n    color: var(--secondaryText);\\n    margin-bottom: 10px;\\n    padding: 0 4px;\\n  }\\n\\n  /* Grid helpers */\\n  .form-grid { display: grid; gap: 12px; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); }\\n  .form-grid.two { grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); }\\n\\n  /* Dropzone layout */\\n  .dropgrid { display: grid; gap: 14px; grid-template-columns: 1.2fr .8fr; }\\n  @media (max-width: 820px) { .dropgrid { grid-template-columns: 1fr; } }\\n\\n  /* Dropzone (token-only) */\\n  .dropzone {\\n    position: relative;\\n    min-height: 130px;\\n    border: 2px dashed var(--borderColor);\\n    border-radius: 14px;\\n    background:\\n      radial-gradient(1000px 200px at 50% -300px, color-mix(in oklab, var(--accentColor) 10%, transparent), transparent 70%),\\n      linear-gradient(180deg, color-mix(in oklab, var(--accentColor) 6%, var(--surfaceColor)), var(--surfaceColor));\\n    display: flex; align-items: center; gap: 14px; padding: 14px 16px; cursor: pointer;\\n    transition: border-color .15s ease, background .15s ease, box-shadow .15s ease;\\n  }\\n  .dropzone.is-dragging {\\n    border-color: color-mix(in oklab, var(--primaryColor) 55%, var(--borderColor));\\n    box-shadow: 0 0 0 4px color-mix(in oklab, var(--primaryColor) 20%, var(--backgroundColor));\\n    background:\\n      radial-gradient(1000px 200px at 50% -300px, color-mix(in oklab, var(--primaryColor) 18%, transparent), transparent 70%),\\n      linear-gradient(180deg, color-mix(in oklab, var(--primaryColor) 10%, var(--surfaceColor)), var(--surfaceColor));\\n  }\\n\\n  .dz-icon {\\n    font-size: 1.4rem;\\n    width: 2.5rem; height: 2.5rem; line-height: 2.5rem; text-align: center;\\n    border-radius: 12px;\\n    border: 1px solid var(--borderColor);\\n    background: var(--surfaceColor);\\n    color: var(--primaryText);\\n    flex: 0 0 auto;\\n  }\\n  .dz-text { display: flex; flex-direction: column; }\\n  .dz-text strong { font-weight: 700; font-size: .95rem; color: var(--primaryText); }\\n  .dz-text small { color: var(--secondaryText); margin-top: 2px; }\\n\\n  .hidden-input { position: absolute; inset: 0; opacity: 0; pointer-events: none; }\\n\\n  .sidegrid { display: grid; gap: 12px; grid-template-columns: 1fr; }\\n\\n  /* Actions (buttons come from forms.css) */\\n  .actions { display: flex; align-items: center; gap: 10px; margin-top: 6px; flex-wrap: wrap; }\\n\\n  /* Notes (success/error) */\\n  .note {\\n    padding: .45rem .6rem; border-radius: .5rem; font-size: .9rem; border: 1px solid transparent;\\n  }\\n  .note.ok {\\n    color: var(--primaryText);\\n    background: color-mix(in oklab, var(--secondaryColor) 12%, var(--surfaceColor));\\n    border-color: color-mix(in oklab, var(--secondaryColor) 40%, var(--borderColor));\\n  }\\n  .note.err {\\n    color: var(--primaryText);\\n    background: color-mix(in oklab, var(--accentColor) 14%, var(--surfaceColor));\\n    border-color: color-mix(in oklab, var(--accentColor) 50%, var(--borderColor));\\n  }\\n</style>\\n"],"names":[],"mappings":"AA0PE,mCAAM,CACJ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,KAAK,CAAE,IAAI,aAAa,CAC1B,CAEA,wBAAS,CAAC,iBAAG,CACX,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAClB,KAAK,CAAE,IAAI,aAAa,CAC1B,CACA,wBAAS,CAAC,gBAAE,CACV,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAChB,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,IAAI,eAAe,CAC5B,CACA,wBAAS,CAAC,mBAAK,CACb,UAAU,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAC5E,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,CACpC,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,KAAK,CAAE,IAAI,aAAa,CAC1B,CAGA,0CAAa,CACX,UAAU,CAAE,IAAI,cAAc,CAAC,CAC/B,YAAY,CAAE,IAAI,aAAa,CACjC,CAEA,qBAAM,CAAG,qBAAO,CAAE,UAAU,CAAE,IAAM,CACpC,qBAAM,CAAG,qBAAO,CACd,SAAS,CAAE,KAAK,CAChB,cAAc,CAAE,KAAK,CACrB,KAAK,CAAE,IAAI,eAAe,CAAC,CAC3B,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,CAAC,CAAC,GACb,CAGA,wCAAW,CAAE,OAAO,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,CACpG,UAAU,kCAAK,CAAE,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAG,CAG9E,uCAAU,CAAE,OAAO,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,qBAAqB,CAAE,KAAK,CAAC,IAAM,CACzE,MAAO,YAAY,KAAK,CAAE,CAAE,uCAAU,CAAE,qBAAqB,CAAE,GAAK,CAAE,CAGtE,uCAAU,CACR,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,CACrC,aAAa,CAAE,IAAI,CACnB,UAAU,CACR,gBAAgB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC;AAC5H,MAAM,gBAAgB,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAC/G,OAAO,CAAE,IAAI,CAAE,WAAW,CAAE,MAAM,CAAE,GAAG,CAAE,IAAI,CAAE,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,MAAM,CAAE,OAAO,CAClF,UAAU,CAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAC5E,CACA,SAAS,0CAAa,CACpB,YAAY,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAC9E,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAC1F,UAAU,CACR,gBAAgB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC;AAC7H,MAAM,gBAAgB,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAClH,CAEA,sCAAS,CACP,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,WAAW,CAAE,MAAM,CAAE,UAAU,CAAE,MAAM,CACtE,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,CACpC,UAAU,CAAE,IAAI,cAAc,CAAC,CAC/B,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IACZ,CACA,sCAAS,CAAE,OAAO,CAAE,IAAI,CAAE,cAAc,CAAE,MAAQ,CAClD,uBAAQ,CAAC,qBAAO,CAAE,WAAW,CAAE,GAAG,CAAE,SAAS,CAAE,MAAM,CAAE,KAAK,CAAE,IAAI,aAAa,CAAG,CAClF,uBAAQ,CAAC,oBAAM,CAAE,KAAK,CAAE,IAAI,eAAe,CAAC,CAAE,UAAU,CAAE,GAAK,CAE/D,2CAAc,CAAE,QAAQ,CAAE,QAAQ,CAAE,KAAK,CAAE,CAAC,CAAE,OAAO,CAAE,CAAC,CAAE,cAAc,CAAE,IAAM,CAEhF,uCAAU,CAAE,OAAO,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,qBAAqB,CAAE,GAAK,CAGlE,sCAAS,CAAE,OAAO,CAAE,IAAI,CAAE,WAAW,CAAE,MAAM,CAAE,GAAG,CAAE,IAAI,CAAE,UAAU,CAAE,GAAG,CAAE,SAAS,CAAE,IAAM,CAG5F,mCAAM,CACJ,OAAO,CAAE,MAAM,CAAC,KAAK,CAAE,aAAa,CAAE,KAAK,CAAE,SAAS,CAAE,KAAK,CAAE,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WACnF,CACA,KAAK,iCAAI,CACP,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,UAAU,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAC/E,YAAY,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,CACjF,CACA,KAAK,kCAAK,CACR,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,UAAU,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAC5E,YAAY,CAAE,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,CAAC,CAC9E"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let canSubmit;
  const tcodes = listTcodes();
  let tcode = tcodes[0]?.tcodeName ?? "";
  let chapters = [];
  let chapterSlug = "";
  let chapterNumber = null;
  let exercises = [];
  let exerciseSlug = "";
  let filename = "";
  let description = "";
  let tagsCsv = "";
  const STATUS = ["draft", "ready", "published", "archived"];
  $$result.css.add(css);
  chapters = tcode ? getChapters(tcode) : [];
  {
    if (!chapters.find((c) => c.filename === chapterSlug)) chapterSlug = "";
  }
  chapterNumber = tcode && chapterSlug ? chapterNo(tcode, chapterSlug) : null;
  exercises = tcode && chapterSlug ? getExercises(tcode, chapterSlug) : [];
  {
    if (!exercises.find((e) => e.filename === exerciseSlug)) exerciseSlug = "";
  }
  canSubmit = !!tcode && !!chapterNumber && !!exerciseSlug && false;
  return `${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})} ${validate_component(AdminNav, "AdminNav").$$render($$result, {}, {}, {})} <section class="wrap svelte-1lc9vvt"><header class="pagehead svelte-1lc9vvt" data-svelte-h="svelte-1s51uh2"><h1 class="svelte-1lc9vvt">Upload JSON Deck</h1> <p class="svelte-1lc9vvt">Pick the path, drop your <code class="svelte-1lc9vvt">.json</code>, add optional meta, then upload.</p></header> <form class="form upload-form svelte-1lc9vvt"> <fieldset class="block svelte-1lc9vvt"><legend class="svelte-1lc9vvt" data-svelte-h="svelte-13kvvn3">Path</legend> <div class="form-grid svelte-1lc9vvt"> <div class="field"><label for="tcode" data-svelte-h="svelte-6p13rk">Tcode</label> <select id="tcode">${!tcodes.length ? `<option value="" data-svelte-h="svelte-11m4iz6">No subjects registered</option>` : `${each(tcodes, (t) => {
    return `<option${add_attribute("value", t.tcodeName, 0)}>${escape(t.tcodeName)}</option>`;
  })}`}</select></div>  <div class="field"><label for="chapter" data-svelte-h="svelte-6veaik">Chapter</label> <select id="chapter" ${!tcode || !chapters.length ? "disabled" : ""}><option value="" disabled selected>${escape(tcode ? "Select chapter" : "Pick tcode first")}</option>${each(chapters, (ch) => {
    return `<option${add_attribute("value", ch.filename, 0)}>Ch ${escape(String(ch.number).padStart(2, "0"))} — ${escape(ch.name)} </option>`;
  })}</select> ${chapterNumber !== null ? `<small class="hint">Chapter #: <strong>${escape(chapterNumber)}</strong></small>` : ``}</div>  <div class="field"><label for="exercise" data-svelte-h="svelte-8p1xu2">Exercise</label> <select id="exercise" ${!chapterSlug || !exercises.length ? "disabled" : ""}><option value="" disabled selected>${escape(chapterSlug ? "Select exercise" : "Pick chapter first")} </option>${each(exercises, (ex) => {
    return `<option${add_attribute("value", ex.filename, 0)}>${escape(ex.name)}</option>`;
  })}</select></div></div></fieldset>  <fieldset class="block svelte-1lc9vvt"><legend class="svelte-1lc9vvt" data-svelte-h="svelte-1iyhln2">File</legend> <div class="dropgrid svelte-1lc9vvt"><div class="${escape(null_to_empty("dropzone "), true) + " svelte-1lc9vvt"}" role="button" tabindex="0" aria-label="Drop JSON here or click to browse"><div class="dz-icon svelte-1lc9vvt" data-svelte-h="svelte-j6trfd">⇪</div> <div class="dz-text svelte-1lc9vvt">${`<strong class="svelte-1lc9vvt" data-svelte-h="svelte-ncr352">Drop your .json here</strong> <small class="svelte-1lc9vvt" data-svelte-h="svelte-12xg281">or click to choose</small>`}</div> <input id="file" type="file" accept="application/json,.json" class="hidden-input svelte-1lc9vvt"></div> <div class="sidegrid svelte-1lc9vvt"><div class="field"><label for="filename" data-svelte-h="svelte-1c30r00">Filename (auto)</label> <input id="filename" placeholder="auto from file"${add_attribute("value", filename, 0)}></div> <div class="field"><label for="status" data-svelte-h="svelte-15lfxni">Status</label> <select id="status"><option value="" data-svelte-h="svelte-7musmw">(auto)</option>${each(STATUS, (s) => {
    return `<option${add_attribute("value", s, 0)}>${escape(s)}</option>`;
  })}</select></div></div></div></fieldset>  <fieldset class="block svelte-1lc9vvt"><legend class="svelte-1lc9vvt" data-svelte-h="svelte-yagw0p">Meta</legend> <div class="form-grid two svelte-1lc9vvt"><div class="field"><label for="description" data-svelte-h="svelte-1tds9bi">Description</label> <input id="description" placeholder="optional"${add_attribute("value", description, 0)}></div> <div class="field"><label for="tags" data-svelte-h="svelte-gn51pt">Tags (csv)</label> <input id="tags" placeholder="algebra, basics"${add_attribute("value", tagsCsv, 0)}></div></div></fieldset>  <div class="actions svelte-1lc9vvt"><button ${!canSubmit ? "disabled" : ""} class="primary">${escape("Upload JSON")}</button> ${``} ${``}</div> <p class="hint" data-svelte-h="svelte-1p0pvel">Tip: Drag &amp; drop a <code>.json</code> file anywhere inside the dashed area above.</p></form> </section>`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-Dawmx3AM.js.map
