{"version":3,"file":"_server-DrK3FLef.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/admin/upload/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { D as DeckBuilder, a as DeckDoctor } from \"../../../../chunks/Deckbuilder.js\";\nimport { i as insertFullQuestionFromDeck } from \"../../../../chunks/questionServices.js\";\nimport { Buffer } from \"buffer\";\nasync function POST({ request }) {\n  const form = await request.formData();\n  const files = form.getAll(\"files\");\n  if (!files.length) {\n    return json({ error: \"No files uploaded\" }, { status: 400 });\n  }\n  const failed = [];\n  for (\n    const file of\n    /** @type {File[]} */\n    files\n  ) {\n    const name = file.name;\n    const filename = name.replace(/\\.(json|js)$/i, \"\");\n    try {\n      let deckRaw;\n      if (/\\.js$/i.test(name)) {\n        const rawCode = await file.text();\n        const base64 = Buffer.from(rawCode, \"utf8\").toString(\"base64\");\n        const mod = await import(`data:application/javascript;base64,${base64}`);\n        const define = mod.defineDeck ?? mod.default;\n        if (typeof define !== \"function\") {\n          throw new Error(\"No defineDeck() export found\");\n        }\n        const builder = new DeckBuilder();\n        define(builder);\n        deckRaw = builder.build();\n      } else {\n        const rawJson = await file.text();\n        deckRaw = JSON.parse(rawJson);\n      }\n      const deckNorm = DeckDoctor.isDeckV1(deckRaw) ? deckRaw : DeckDoctor.build(deckRaw);\n      const validation = DeckDoctor.validate(deckNorm);\n      if (!validation.ok) {\n        const msgs = validation.errors.map((e) => e.message).join(\"; \");\n        throw new Error(`Validation failed: ${msgs}`);\n      }\n      const deck = validation.value;\n      const { name: qName, description, tags, status } = deck;\n      const timed = DeckDoctor.getTotalDuration(deck) > 0;\n      await insertFullQuestionFromDeck({\n        filename,\n        name: qName,\n        description,\n        tags,\n        status,\n        timed,\n        deck\n      });\n    } catch (err) {\n      console.error(`Upload error for ${name}:`, err);\n      if (err.code === \"P2002\") {\n        failed.push(`${name} (question already exists)`);\n      } else {\n        failed.push(`${name} (${err.message})`);\n      }\n    }\n  }\n  if (failed.length) {\n    return json({ error: `Failed uploads: ${failed.join(\", \")}` }, { status: 400 });\n  }\n  return json({ success: true });\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}