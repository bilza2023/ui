// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Question {
  filename     String   @id                 // stable identity / anchor
  tcode        String                       // subject/book
  chapter      Int                           // chapter number
  exercise     String                        // exercise name
  type         String                        // "deck" | "note" | (future: "quiz", "video", ...)
  
  // ── Metadata ──
  name         String?
  description  String?
  tags         Json?
  status       String?                       // draft | ready | hidden
  sortOrder    Int?                          // manual ordering inside exercise
  timed        Boolean   @default(false)

  // ── Payloads ──
  deck         Json?                         // only when type="deck"
  note         String?                       // only when type="note"

  createdAt    DateTime @default(now())
  editedAt     DateTime @updatedAt

  @@index([tcode])
  @@index([tcode, chapter])
  @@index([tcode, chapter, exercise])
  @@index([tcode, chapter, exercise, sortOrder])
}



/////////////////////////////////
model Comments {
  id          String   @id @default(cuid())
  created_at  DateTime @default(now())

  content_id  String
  user_id     String
  text        String   // the comment text
  response    String?   // the comment text

  @@index([content_id, created_at], name: "idx_comment_content_time")
  @@index([user_id, content_id], name: "idx_comment_user_content")
}


///////////

model Likes {
  id            String   @id @default(cuid())
  created_at    DateTime @default(now())

  content_id    String
  user_id       String

@@unique([user_id, content_id], name: "uniq_user_content_reaction")
@@index([user_id, content_id], name: "idx_user_content")
}

//////////////
enum StudentMessageCategory {
  general
}

model StudentMessage {
  id          String                   @id @default(cuid())
  user_id     String
  category    StudentMessageCategory   @default(general)
  message     String
  read        Boolean                  @default(false)
  created_at  DateTime                 @default(now())
  @@index([user_id, read, created_at])
  @@index([user_id, created_at])
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@index([email])
}
